<apex:page id="accounttree" standardController="Account" extensions="AccountTree,CreateMyQuoteControllerWL,AccountTreeConfiguration" sidebar="false">


    <apex:includescript value="//code.jquery.com/jquery-2.1.0.min.js" />
     <apex:includescript value="//code.jquery.com/ui/1.11.4/jquery-ui.js" />
    <apex:includescript value="//cdn.datatables.net/1.10.4/js/jquery.dataTables.min.js" />
    <apex:includescript value="//cdn.datatables.net/tabletools/2.2.4/js/dataTables.tableTools.min.js" />
    <apex:stylesheet value="//cdn.datatables.net/1.10.4/css/jquery.dataTables.css" />
    <apex:stylesheet value="//cdn.datatables.net/tabletools/2.2.4/css/dataTables.tableTools.css" />

    <apex:includeScript value="{!URLFOR($Resource.jstree , '/vakata-jstree-92ac4c8/dist/jstree.js' )}" />
    <apex:includeScript value="{!URLFOR($Resource.jstree , '/vakata-jstree-92ac4c8/src/vakata-jstree.js' )}" />
    <apex:includeScript value="{!URLFOR($Resource.jstree , '/vakata-jstree-92ac4c8/dist/jstree.min.js' )}" />
    <apex:includeScript value="{!URLFOR($Resource.jstree , '/vakata-jstree-92ac4c8/src/jstree.checkbox.js' )}" />
    <apex:includeScript value="{!URLFOR($Resource.jstree , '/vakata-jstree-92ac4c8/src/jstree.contextmenu.js' )}" />
    <apex:includeScript value="{!URLFOR($Resource.jstree , '/vakata-jstree-92ac4c8/src/jstree.search.js' )}" />
    <apex:includeScript value="{!URLFOR($Resource.jstree , '/vakata-jstree-92ac4c8/src/jstree.sort.js' )}" />
    <apex:includeScript value="{!URLFOR($Resource.jstree , '/vakata-jstree-92ac4c8/src/jstree.state.js' )}" />
    <apex:includeScript value="{!URLFOR($Resource.jstree , '/vakata-jstree-92ac4c8/src/jstree.types.js' )}" />
    <apex:includeScript value="{!URLFOR($Resource.jstree , '/vakata-jstree-92ac4c8/src/jstree.wholerow.js' )}" />
    <apex:includeScript value="{!URLFOR($Resource.jstree , '/vakata-jstree-92ac4c8/src/jstree.dnd.js' )}" />
    <apex:includeScript value="{!URLFOR($Resource.jstree , '/vakata-jstree-92ac4c8/src/jstree.massload.js' )}" />
    <apex:includeScript value="{!URLFOR($Resource.jstree , '/vakata-jstree-92ac4c8/src/jstree.unique.js' )}" />



    <apex:stylesheet value="{!URLFOR($Resource.jstree , '/vakata-jstree-92ac4c8/dist/themes/default/style.min.css')}" />
    <apex:includeScript value="{!URLFOR($Resource.restJavascript, '/rest/forcetk.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.JSTREEGRID , '/' )}" />
  <apex:includeScript value="/support/console/45.0/integration.js"/>

    <style>
        #example
        {
            float:left !important;
        }
        .tertiaryPalette
        {
            margin-bottom:15px;
        }
        td.details-control {
            background: url('/servlet/servlet.FileDownload?file=015g0000000cjM4') no-repeat center center;
            cursor: pointer;
        }
        
        tr.shown td.details-control {
            background: url('/servlet/servlet.FileDownload?file=015g0000000cjLz') no-repeat center center;
        }
        
        .datatables1_filter {
            float: left;
            text-align: left;
        }
        #overlay,#overlay1
        {
            position: absolute;
            height: 100%;
            width: 100%;
            background-color: black;
            z-index: 100;
            opacity: .5;
            display:none;
            
        }

        .loaderWrapper,.loaderWrapper1
        {        
            position: absolute;
            margin: auto;
            text-align: center;
            right: 0px;
            left: 0px;
            top: 0px;
            bottom: 0px;
            height:35px;  
            color:white
        }
        .detailList,#wrapper
        {
            position:relative;
        }
        .lable
        {
            padding:6px;
        }
        .jstree-grid-separator
        {
            height:auto;
        }
        #dbg
        {
            color: #0397D2;
            clear: both;
            margin-top: 20px;
            padding-top: 10px;
            padding-bottom: 10px;
            width: 100%;
            font-weight: 600;
            text-align: center;
            margin-bottom: 10px;
        }
        input, select
        {
            border-radius: 4px;
            padding: 4px;
            border: 1px solid #CCC;
        }
        .data2Col.last 
        {
            margin:15px 0px;
        }
        input[type='submit'],button,.DTTT_button
        {
        /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#8a9ebe+0,aec0f2+100 */
            background: #8a9ebe !important; /* Old browsers */
            background: -moz-linear-gradient(top,  #8a9ebe 0%, #aec0f2 100%) !important; /* FF3.6-15 */
            background: -webkit-linear-gradient(top,  #8a9ebe 0%,#aec0f2 100%) !important; /* Chrome10-25,Safari5.1-6 */
            background: linear-gradient(to bottom,  #8a9ebe 0%,#aec0f2 100%) !important; /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
            filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#8a9ebe', endColorstr='#aec0f2',GradientType=0 ) !important; /* IE6-9 */
            border: 0px !important;
            padding: 9px 20px !important;
            color:white !important;
        }
        .dataTables_paginate
        {
           padding-right: 20px;
        }
        .paginate_button
        {
            background-color:#aec0f2 ;
            border: 0px !important;
            padding: 9px 10px !important;

        }
    .dataTables_wrapper .dataTables_paginate .paginate_button.current, .dataTables_wrapper .dataTables_paginate .paginate_button.current:hover,paginate_button
       {
                color:white !important;
       }
        .dataTables_wrapper .dataTables_paginate .paginate_button.disabled, .dataTables_wrapper .dataTables_paginate .paginate_button.disabled:hover, .dataTables_wrapper .dataTables_paginate .paginate_button.disabled:active
       {
                  color:black !important;
       }

        .noSidebarCell
        {
            position: absolute;
            width: 100%;
            display: block;
            padding-left:0px;
        }
        .detailList, .detailList>tbody>tr, .detailList>tbody, .detailList>tbody>tr>td
        {
            display:block;
        }
        .bPageBlock .detailList .data2Col
        {
            width:100%;
        }
        div.DTTT_container
        {
            margin-bottom:0px;
            margin-top:4px;
        }
        .dataTables_scroll
        {
            overflow-x:auto;
            width:100%;
        }
        .details-control
        {
            display:none;
        }
        #example_wrapper > div.dataTables_scroll > div.dataTables_scrollHead > div > table > thead th {
            background-color: #EBF3FD;
            border-left: solid 2px white;
            border-bottom: solid 3px #8A9EBE;
        }
        .bPageBlock .detailList th, .bPageBlock .detailList td
        {
            vertical-align:middle;
        }
        .jstree-grid-wrapper
        {
            overflow-x:scroll;
        }
        .jstree-grid-separator-regular
        {
            border:none !important;
        }
        th.jstree-grid-header.jstree-grid-header-cell.jstree-grid-header-regular {
               text-align: center;
                vertical-align: middle;
                padding: 10px;
                border-bottom: solid 3px #8A9EBE;
        }
        .jstree-grid-table td.jstree-grid-cell div:nth-child(2n+1) {
            background-color: #EBEBEB;
            
        }
        .jstree-grid-table td.jstree-grid-cell div
        {
            padding-left: 20px;
        }
        .jstree-grid-table td.jstree-grid-cell div:first-child
        {
            padding-left:0px;
            width:100%;
        }
        
        .jstree-grid-table tbody tr:nth-child(2) td:last-child {
            white-space:nowrap;
        }
        .jstree-grid-table tbody tr:nth-child(2) td:last-child .jstree-grid-cell {
             overflow-x:scroll;
        }
        form
        {
            margin:15px 0px;
        }
        .dataTables_length
        {
            margin:0px 30px;
        }
        .bottom
        {
            margin-top:10px;
        }
        .dataTables_scroll
        {
                padding-top: 20px;
        }
        .number
        {
            text-align:center;
        }
        table.dataTable tfoot th, table.dataTable tfoot td
        {
            padding:0px;
        }
    </style>
    <div id="wrapper">
    <div id="overlay1">
        <div class='loaderWrapper1'>
            <img src="{!URLFOR($Resource.loadingBar)}"></img>
            <div class="text">Loading....</div>
        </div>
    </div>
    <apex:pageBlock title="Account Tree" html-width="100%">
        <apex:pageblockSection title="Account Tree" columns="1">
            <lable class="lable" style="float:left;">Search:</lable>
            <input id="search-input" class="search-input form-control" style="float:left;"></input>
            <a id="mylink" href="#" style="float:center;padding-left:25px; color:blue">   Show All</a>
            <input id="chkLoadAll" type="checkbox" style="float:center;padding-left:50px; color:black" /> Load Complete Tree :



            <button id="download" style="float:right;padding-left:10px; color:blue">Download CSV</button>



            <input id="quote" type="checkbox" checked="true" style="float:right;padding-left:10px; color:blue ;visibility: hidden;" />
            <input id="labels" type="checkbox" checked="true" style="float:right;padding-left:10px; color:blue;visibility: hidden;" />



            <div id="dbg" >
            </div>
            <div id="dbg1" style="float:center;padding-left:10px; color:black">
            </div>
            <div id="csv" style="visibility: hidden;"></div>
            <br></br>
            <div id="jstree" width="100%" cellspacing="0" height="100%" style="float:left;">
            </div>
        </apex:pageblockSection>

        <apex:pageblockSection title="Account Details" columns="1">
        <div id="overlay">
            <div class='loaderWrapper'>
                <img src="{!URLFOR($Resource.loadingBar)}"></img>
            <div class="text">Loading....</div>
            </div>
        </div>
            <apex:form >
                <apex:selectList id="myoptions" style="float:left;  width:250px;" value="{!Account.Name}" title="Select" multiselect="false" size="1" onkeypress="return noenter(event);" onchange="CopyFilterValue()">
                    <apex:selectOptions value="{!FilterList}" />
                </apex:selectList>

                <lable style="padding:0 30px;">Active :
                <input id="mlsactive" type="checkbox" checked="true" style="padding-left:10px; color:black" /></lable>

                <apex:commandButton style="float: center;width:150px; padding-right: 5px;" value="Open Account" onclick="OpenAccount()" />
            </apex:form>

            <table id="example" class="display" width="100%" height="50%" style="float: right;">
                <tfoot>
                    <tr>
                       <th></th>
                        <th colspan="1" style="text-align:left">Total:</th>
                        <th colspan="1" style="text-align:left"></th>
                        <th colspan="1" style="text-align:left"></th>
                        <th colspan="1" style="text-align:left"></th>
                        <th colspan="1" style="text-align:left"></th>
                        <th colspan="1" style="text-align:left"></th>
                        <th colspan="1" style="text-align:left"></th>
                        <th colspan="1" style="text-align:left"></th>
                        <th colspan="1" style="text-align:left"></th>
                        <th colspan="1" style="text-align:left"></th>
                        <th colspan="1" style="text-align:left"></th>
                        <th colspan="1" style="text-align:left"></th>
                        <th colspan="1" style="text-align:left"></th>
                        <th colspan="1" style="text-align:left"></th>
                        <th colspan="1" style="text-align:left"></th>
                        <th colspan="1" style="text-align:left"></th>
                        <th colspan="1" style="text-align:left"></th>
                        <th colspan="1" style="text-align:left"></th>
                        <th colspan="1" style="text-align:left"></th>
                        <th colspan="1" style="text-align:left"></th>
                    </tr>
                </tfoot>
            </table>

        </apex:pageblockSection>
    </apex:pageBlock>
    </div>




    <!-- JavaScript to make Remote Objects calls 
    /***********************************Account Tree *******************************
 ******************* Created by Arun Sharma *********************************
 ********************Move Inc , All rights reserverd  Move Inc ***********
 *********************Creation Date Aug 2015 **************************
 ******************** ***************************************************
 ************************************************************************
 Functionality - Show Account and all its parents , display accoun details for various components 
 like MLS , Listing , Leads , Complains , Assets , Subscriptions , Payments 
 
 Uses Plugins - Jstree , Forectk , Jstreegrid , DataTables 
  ****************************************************************/  -->
    
    <script type="text/javascript">
        var MasterRootId;
        var bLoadedText = false;
        var AccountId = "Root";
        var myjson;
        var myjsoncomplete = false;
        var myjsoninside = '{ "id" : "01", "parent" : "#", "text" : "Account Tree" }';
        var bFirstNode = true;
        var myjsonthreadstarted = 0;
        var myjsonthreadcompleted = 0;
        var MLS = [];
        var NoofRows = 0;
        var bPartialLoad = false;
        var mypartialjson;
        var BatchSize ='{!BatchSize}'; // size of the Tree Batch
        var table;
        var GlobalSelectedNodeId;
        var GlobalSelectedText;
        var GlobalSelectedFilter ='{!GlobalSelectedFilter}';
            var GlobalSelectedType = '{!GlobalSelectedType}';
        var myDupArray = [];
        var mlsactive = true;
        var caseactive = true;
        var mAccType = "{!Account.Type}";
        var mycntr = 1;
        var OffMasterArray = [];
        var AgentDataVal=[];
        var ParentObject=null;
        var rootIdVal=null;
        var exportHide=null;
        var chkLoadAll = false;
        var globalCountVal=0;
        var x = document.getElementById("mlsactive").name;
        var old_time;
        var new_time;
        var seconds_passed = 0;
        var StoredOldTime;
        old_time = new Date();
        StoredOldTime = old_time.getTime();
        var client = new forcetk.Client('{!$Api.Session_ID}');
 
        if ($("#mlsactive").is(':checked')) {

            mlsactive = "'Active'";
            caseactive = true;


        } else {
            mlsactive = "'Active','Inactive'";
            caseactive = "'true','false'";

        }

        if ($("#chkLoadAll").is(':checked')) {

            chkLoadAll = true;


        } else {
            chkLoadAll = false;

        }


        BatchSize = "{!$Label.AcctTreeBatchsize}";
        var NoOfThreads = "{!$Label.AcctTreeNoofThreads}";

        if (checkfornull(BatchSize) === true) {
            BatchSize = 1500;

        }

        if (checkfornull(NoOfThreads) === true) {
            NoOfThreads = 200;

        }

        AccountId = '{!Account.Id}';

        if (checkfornull(AccountId) === true) {
            alert('Please provide a valid Account Id');

        }
        $('#overlay1').show();
        
       /*-- Get a reference to jQuery that we can work with--*/

        dbg = false;

        function CopyFilterValue() {

        var myvalue = jQuery("[id$=myoptions]").val();
            GlobalSelectedFilter = myvalue;
            loadDataTable(GlobalSelectedNodeId, GlobalSelectedText, GlobalSelectedFilter, GlobalSelectedType, 'CopyFilterValue');
           
           if (checkfornull(MasterRootId) === true) {
                loadRelationShipText(AccountId, GlobalSelectedText, GlobalSelectedFilter, '', '', 1, '');
            } else {
                loadRelationShipText(MasterRootId, GlobalSelectedText, GlobalSelectedFilter, '', '', 1, '');
            }

            return true;

        }


/* Dummy Function*/
        function getMyList() {

            return ["MLS", "Product"]

        }
       
        /*--- Formatting function for row details - modify as you need---- (not working )*/
        function format(d, myId, row) {
            var tmp;

            if (checkfornull(d.MLSID) === false) {
                myId = d.MLSID;
            }

            var query = "SELECT Name ,Own_Co_Broke__c,Own_Cycle__c,Own_DAP__c,Own_DAC__c,Own_Domain_Name__c,Own_Doorsteps__c,Own_FCMA__c,Own_FAC__c,Own_LH__c,Own_Market_Builder__c,Own_MS__c,Own_CoShow__c";

            var query = query + ",Own_OSR__c, Own_SLE__c ,Own_OSL__c,Own_TP_CRM__c,Own_IDX__c,Own_TP_Website__c,Own_Office_Website__c,Own_FS__c,Phone  FROM Account WHERE Id ='" + myId + "'";

            client.query(query, function(response) {

            if (response.records.length > 0) {

                    for (var i = 0; i < response.records.length; i++) {
                        tmp = '<tr>' + '<td>Account Name:</td>' + '<td>' + response.records[i].Name + '</td>' + '</tr>';
                        tmp = '<tr>' + '<td>Phone:</td>' + '<td>' + response.records[i].Phone + '</td>' + '</tr>';
                        tmp = tmp + '<tr>' + '<td>Own CBCP:</td>' + '<td>' + response.records[i].Own_Co_Broke__c + '</td>' + '</tr>';
                        tmp = tmp + '<tr>' + '<td>Own Connection(SM) for Co-Brokerage:</td>' + '<td>' + response.records[i].Own_Co_Broke__c + '</td>' + '</tr>';
                        tmp = tmp + '<tr>' + '<td>Own Cycle:</td>' + '<td>' + response.records[i].Own_Cycle__c + '</td>' + '</tr>';
                        tmp = tmp + '<tr>' + '<td>Own Digital Ad Package:</td>' + '<td>' + response.records[i].Own_DAP__c + '</td>' + '</tr>';
                        tmp = tmp + '<tr>' + '<td>Own Domain Ad Campaign:</td>' + '<td>' + response.records[i].Own_DAC__c + '</td>' + '</tr>';
                        tmp = tmp + '<tr>' + '<td>Own Domain_Name :</td>' + '<td>' + response.records[i].Own_Domain_Name__c + '</td>' + '</tr>';
                        tmp = tmp + '<tr>' + '<td>Own Doorsteps:</td>' + '<td>' + response.records[i].Own_Doorsteps__c + '</td>' + '</tr>';


                        tmp = tmp + '<tr>' + '<td>Own Featured CMA:</td>' + '<td>' + response.records[i].Own_FCMA__c + '</td>' + '</tr>';
                        tmp = tmp + '<tr>' + '<td>Own Featured Display:</td>' + '<td>' + response.records[i].Own_FAC__c + '</td>' + '</tr>';
                        tmp = tmp + '<tr>' + '<td>Own Featured Home(SM):</td>' + '<td>' + response.records[i].Own_FAC__c + '</td>' + '</tr>';
                        tmp = tmp + '<tr>' + '<td>Own FH Broke:</td>' + '<td>' + response.records[i].Own_Co_Broke__c + '</td>' + '</tr>';
                        tmp = tmp + '<tr>' + '<td>Own FiveStreet:</td>' + '<td>' + response.records[i].Own_FS__c + '</td>' + '</tr>';
                        tmp = tmp + '<tr>' + '<td>Own_LH__c :</td>' + '<td>' + response.records[i].Own_LH__c + '</td>' + '</tr>';
                        tmp = tmp + '<tr>' + '<td>Own Market Builder:</td>' + '<td>' + response.records[i].Own_Market_Builder__c + '</td>' + '</tr>';
                        tmp = tmp + '<tr>' + '<td>Own Market Snapshot:</td>' + '<td>' + response.records[i].Own_MS__c + '</td>' + '</tr>';
                        tmp = tmp + '<tr>' + '<td>Own Office Website:</td>' + '<td>' + response.records[i].Own_Office_Website__c + '</td>' + '</tr>';
                        tmp = tmp + '<tr>' + '<td>Own Showcase(SM) Listing Enhancements:</td>' + '<td>' + response.records[i].Own_CoShow__c + '</td>' + '</tr>';
                        tmp = tmp + '<tr>' + '<td>Own Sign Rider:</td>' + '<td>' + response.records[i].Own_OSR__c + '</td>' + '</tr>';
                        tmp = tmp + '<tr>' + '<td>Own SLE:</td>' + '<td>' + response.records[i].Own_OSL__c + '</td>' + '</tr>';
                        tmp = tmp + '<tr>' + '<td>Own Standard Listing Enhancements:</td>' + '<td>' + response.records[i].Own_SLE__c + '</td>' + '</tr>';
                        tmp = tmp + '<tr>' + '<td>Own Tiger:</td>' + '<td>' + response.records[i].Own_TP_CRM__c + '</td>' + '</tr>';
                        tmp = tmp + '<tr>' + '<td>Own Top Producer CRM:</td>' + '<td>' + response.records[i].Own_TP_CRM__c + '</td>' + '</tr>';
                        tmp = tmp + '<tr>' + '<td>Own Top Producer IDX:</td>' + '<td>' + response.records[i].Own_IDX__c + '</td>' + '</tr>';
                        tmp = tmp + '<tr>' + '<td>Own Top Producer Website:</td>' + '<td>' + response.records[i].Own_TP_Website__c + '</td>' + '</tr>';

                        // `d` is the original data object for the row
                        tmp = '<table cellpadding="5" cellspacing="0" border="0" style="padding-left:50px;">' +
                            tmp + '</table>';

                        row.child(tmp).show();
                    }
                }



            });
        }

//Function to hide and show Export/Print/Download for certain user profile
        function exportDataHide()
        {
        var resultVal='{!result}';
        var currentUserProfile=null;
//Add any new user profile to this filteredArray list
        var filteredArray=['Admin Read Only','Dev System Admin','Eloqua Integration','Move Broker Account Manager','Move Field Sales Rep','Move Sales Manager','Move Sales Ops','Move Collection Manager','Move Retention Manager','System Administrator']
        var showHideVal;
        
        var query="Select Profile_Name__c FROM User WHERE Id='"+resultVal+"'";
        client.query(query, function(response)
        {
            currentUserProfile=response.records[0].Profile_Name__c;
            
             showHideVal=filteredArray.indexOf(currentUserProfile);
             exportHide=showHideVal;
             if(exportHide==-1)
             $('#download').hide();
        });
        }
        exportDataHide()

        function callnodeselected(e, data) {
            var mycurrid;
            var mycurrtext;
            var mycurrtype;
            var myprimarymls;
            console.log(data);
            var i, j, r = [];

            if ((bPartialLoad === true) || (myjsoncomplete === true)) {

                for (i = 0, j = data.selected.length; i < j; i++) {
                    r.push(data.instance.get_node(data.selected[i]).text);
                    r.push(data.instance.get_node(data.selected[i]).id);
                    mycurrid = data.instance.get_node(data.selected[i]).id;
                    mycurrtext = data.instance.get_node(data.selected[i]).text;

                    try {
                        mycurrtype = data.instance.get_node(data.selected[i]).data.reltype;
                        myprimarymls = data.instance.get_node(data.selected[i]).data.primarymls;
                    } catch (e) {
                        mycurrtype = 'Broker';
                    }
                    var mylink = '<a target="_blank" href="/' + mycurrid + ' target="_blank"">' + mycurrtext + '</a>';
                    $('#dbg').html('Selected : ' + mycurrtext + " , " + mycurrid + " - " + mycurrtype + " - Primary MLS:" + myprimarymls);

                    GlobalSelectedNodeId = mycurrid;
                    GlobalSelectedText = mycurrtext;
                    GlobalSelectedType = mycurrtype;

                    if (checkfornull(MasterRootId) === true) {

                        loadRelationShipText(AccountId, GlobalSelectedText, GlobalSelectedFilter, mycurrtype, myprimarymls, 1, '');
                    } else {
                        loadRelationShipText(MasterRootId, GlobalSelectedText, GlobalSelectedFilter, mycurrtype, myprimarymls, 1, '');


                    }


                    if(rootIdVal === data.selected[0] && GlobalSelectedFilter=='Agent View')
                    {
                        intialDataTable();
                        return;
                    }

                    loadDataTable(GlobalSelectedNodeId, GlobalSelectedText, GlobalSelectedFilter, mycurrtype, 'callnodeselected');

                    data.instance.redraw(true);

                }

            }

            return true;

        }

        function clickNodeEvent()
        {
                $("#jstree").bind(
                    "select_node.jstree",
                    function(evt, data) {
                     $('#dbg').css('background-color','rgb(234, 231, 231)');
                     $("#dbg").stop();
                    $( "#dbg" ).animate({ backgroundColor: "rgb(241, 241, 241)"},2000)
                       
                        if ($("#mlsactive").is(':checked')) {

                            mlsactive = "'Active'";
                            caseactive = true;


                        } else {
                            mlsactive = "'Active'" + ",'Inactive'";
                            caseactive = "'true','false'";


                        }
                                            

                        callnodeselected(evt, data);

                    }
                );


        }

        ///////////////////////////////////////
        //
        // Get an instance of the REST API client
        //
        ///////////////////////////////////////
        function intialDataTable()
        {
            
             if (checkfornull(table) === false) {
              table.destroy();
             }
           table = $('#example').DataTable({
                     "sScrollX": "100%",
                     "sScrollXInner": "200%",
                     "bScrollCollapse": true,
                    "pagingType": "full_numbers",
                    stateSave: true,
                    "lengthMenu": [
                        [10, 25, 50, 100, -1],
                        [10, 25, 50, 100, "All"]
                    ],
                    'iDisplayStart': 25,
                    "scrollCollapse": false,
                    colReorder: {
                        realtime: false
                    },
                    "order": [
                        [1, "desc"]
                    ],
                    "dom": 'CRT<"datatables1_filter"f><"top"lp>rt<"bottom"lip><"clear">',
                    "data": AgentDataVal,
                    "columns": [{
                            "className": 'details-control',
                            "orderable": false,
                            "defaultContent": '',
                            "data": null
                        },
                        {
                            "title": "Child Name"
                        }, {
                            "title": "Child Type "
                        }, {
                            "title": "Child Primary MLS Set",
                            "className": 'number'
                        }, {
                            "title": "Child Preffered Phone",
                            "className": 'number'
                        }, {
                            "title": "Child Total Offices",
                            "className": 'number'
                        }, {
                            "title": "Child Total Agents ",
                            "className": 'number'
                        }, {
                            "title": "Child Total HLC",
                            "className": 'number'
                        }, {
                            "title": "Child Total CLC  ",
                            "className": 'number'
                        }, {
                            "title": "$ Child TCV"
                        }, {
                            "title": "Child Franchise Type"
                        }, {
                            "title": "Child Sub Type "
                        }, {
                            "title": "Child Owner "
                        }, {
                            "title": "Relationship Type"
                        },
                        {
                            "title": "Parent Name"
                        }, {
                            "title": "Parent Type"
                        }, {
                            "title": "Parent HLC",
                            "className": 'number'
                        }, {
                            "title": "Parent CLC  ",
                            "className": 'number'
                        }, {
                            "title": "Parent Total Offices",
                            "className": 'number'
                        }, {
                            "title": "Parent Total Agents",
                            "className": 'number'
                        },
                        {
                            "title": "Child Account Id"
                        }
                                ],
                                "order": [
                                    [1, 'asc']
                                ],



                                tableTools: {
                                    sRowSelect: "os",
                                    sSwfPath: "{!URLFOR($Resource.TableTools,'TableTools-2.2.4/swf/copy_csv_xls_pdf.swf')}",
                                    aButtons: [{
                                            sExtends: "collection",
                                            sButtonText: "Export",
                                            sButtonClass: "save-collection",
                                            aButtons: ['copy', 'csv', 'xls', 'pdf']
                                        },
                                        'print'
                                    ]
                                },
                                "fnInitComplete":function(){
                                $('#overlay').hide();
                                }

                            }); 
            
            
        }
        
/* load tree using json*/ 
        function loadtree(myjson) {

            $(document).ready(function() {

                $('#jstree').jstree({
                    "plugins": ["contextmenu", "massload", "search", "state", "types", "wholerow", "grid"],

                    check_callback: true,


                    "search": {

                        "case_insensitive": false,
                        "show_only_matches": false


                    },


                    "types": {


                        "root": {
                            "icon": "/static/3.2.0/assets/images/tree_icon.png",
                            "valid_children": ["default"]
                        },
                        "default": {
                            "valid_children": ["default", "file"]
                        },
                        "file": {
                            "icon": "glyphicon glyphicon-file",
                            "valid_children": []
                        }



                    },


                    "contextmenu": {
                        "items": function(node) {
                            return {
                                "view": {
                                    label: "View Record",
                                    action: function(obj) {
                                        window.open("/" + node.id);
                                    }

                                },
                                "TASpend": {
                                    label: "Calculate Agent Spent",
                                    action: function(obj) {

                                        calculate_agent_spend('[' + myjsoninside + ']');


                                    }
                                }

                            }


                        }
                    },

                    'grid': {
                        'columns': [{
                                'width': 300,
                                'header': 'Summary',
                                'tree': true,
                                'resizable': true,
                                title: "_DATA_"
                            }

                            , {
                                'width': 205,
                                'header': 'Primary MLS',
                                'value': function(node) {
                                    return (node.primarymls);
                                }
                            }


                            , {
                                'width': 100,
                                'header': 'Type',
                                'title': 'reltype',
                                'value': function(node) {
                                    return (node.reltype);
                                }
                            }

                            , {
                                'width': 100,
                                'header': 'Sub Type',
                                'title': 'subtype',
                                'value': function(node) {
                                    return (node.subtype);
                                }
                            }

                            ,  {
                                'width': 100,
                                'header': 'Phone',
                                title: "phone",
                                'value': function(node) {
                                    return (node.phone);
                                }
                            }, {
                                'width': 50,
                                'header': 'HLC',
                                'value': function(node) {
                                    return (node.thv);
                                }
                            }   

                            ,   {
                                'width': 50,
                                'header': 'CLC ',

                                'title': 'totalclc',
                                'value': function(node) {
                                    return (node.totalclc);
                                }
                            }
                            ,    {
                                'width': 75,
                                'header': '$TCV',
                                'value': function(node) {
                                    return (node.tcv);
                                }
                            }, {
                                'width': 90,
                                'header': '$Agent Spend',
                                'title': 'TAS',
                                'value': function(node) {
                                    return (node.tas);
                                }
                            },


                            {
                                'width': 60,
                                'header': '#Offices',
                                'value': function(node) {
                                    return (node.noofoffices);
                                }
                            }, {
                                'width': 60,
                                'header': '#Agents ',
                                'value': function(node) {
                                    return (node.noofagents);
                                }
                            },

                            {
                                'width': 100,
                                'header': 'Relationship',
                                'value': function(node) {
                                    return (node.relationship);
                                }
                            },

                            {
                                'width': 65,
                                'header': 'Franchise',
                                'value': function(node) {
                                    return (node.franchise);
                                }
                            }
                        ]
                    },


                    'core': {
                        "multiple": false,

                        themes: {
                            "stripes": true,
                            "theme": "apple",
                            "dots": true,
                            "icons": true,

                            "variant": "large"
                        },
                        "check_callback": true,
                        "animation": 0
                        ,  data: myjson

                    }

                });

                $("#jstree")
                .bind('ready.jstree', function(e, data) {

                   var jsonParsing =myjson;
                   // CRM-1227 Add if to check if 1st index is not null
                   if (jsonParsing[1] != null) {
                       rootIdVal=jsonParsing[1].id;
                   }
                   else {
                       rootIdVal=jsonParsing[0].id;
                   }

                    clickNodeEvent();
                     jQuery("#jstree").jstree("deselect_all"); 
                    jQuery("#jstree").jstree("select_node", "#"+rootIdVal);
                    $('#overlay1').hide();
                    
                 });
                
            
                var to = false;
                $(".search-input").keyup(function() {
                    if (to) {
                        clearTimeout(to);
                    }

                    to = setTimeout(function() {
                        var searchString = $(".search-input").val();
                        $('#jstree').jstree(true).search(searchString);
                    }, 250);
                });

            }); // end of ready function

        }

        function firstNodeLoad(Id) {
            parentId = Id;
            
            var query = "select Parent_Account__c ,name ,Id,Parent_Account__r.Name ,Parent_Account__r.Total_Agents__c ,Parent_Account__r.Total_CLC__c,parent_Account__r.ID ,Active__c,Billing_Contact__c,Billing_Contact_Unique__c,Broker_of_Record__c ,Child_Account__r.Id,Child_Account__r.Name ,Parent_Account__r.Total_Offices__c,Child_Account__r.Total_Offices__c ,Child_Account__r.Total_Agents__c ,Child_Account__r.Total_CLC__c ,Parent_Account__r.Total_HLC__c ,Child_Account__r.Total_HLC__c , Child_Account__r.Type ,Parent_Account__r.type ,Is_Parent_Primary__c ,Child_Account__r.Total_Contract_Value__c ,Parent_Account__r.Total_Contract_Value__c";
            query = query + ",Child_Account__r.MLS_Set_Id__c , Parent_Account__r.MLS_Set_Id__c ,Child_Account__r.Phone , Parent_Account__r.Phone ,Parent_Account__r.Primary_HLC__c,Child_Account__r.Primary_HLC__c,Relationship_Type__c,Parent_Account__r.Franchise_Type__c,Child_Account__r.Franchise_Type__c,Parent_Account__r.Account_Owner_Full__c,Child_Account__r.Account_Owner_Full__c ,Parent_Account__r.Account_Sub_Type__c,Child_Account__r.Account_Sub_Type__c ";

            query = query + " from Account_Relationship__c where Parent_Account__c = '" + parentId + "'";
            query = query + " and Parent_Account__r.Type != 'Realtor Agent'  and Active__c = True   ORDER BY Child_Account__r.Name , Child_Account__r.MLS_Set_Id__c NULLS LAST ";


            //WHERE  Is_Parent_Primary__c = True And Active__c = True and Parent_Account__c = '" + parentId + "'";

            /////////////////////
            /// Debugging
            /////////////////////

            //  alert(query);
            dbg = false;
            if (dbg) {
                document.getElementById('dbg').innerHTML += "<br/>---<br/> firstNodeLoad query - " + query;
            }




            myjsonthreadstarted = myjsonthreadstarted + 1;

            if (myjsonthreadstarted < NoOfThreads || myjsoncomplete === false) {
             
                client.query(query, parseNode);

            }


            if (checkfornull(MasterRootId) === true) {

                loadRelationShipText(AccountId, GlobalSelectedText, GlobalSelectedFilter, '', '', 1, '');
            } else {
                loadRelationShipText(MasterRootId, GlobalSelectedText, GlobalSelectedFilter, '', '', 1, '');

            }

        }

        //////////////////////////////////////////////////
        //
        //  Parse the REST repsonse
        //
        /////////////////////////////////////////////////

        function parseNode(response) {


            if ((checkfornull(response) != true) && (myjsoncomplete === false))

            {

                for (var i = 0; i < response.records.length; i++) {



                    NoofRows = NoofRows + 1;

                    if (bFirstNode === true) {
                        myjsoninside = '{ "id" : "01", "parent" : "#", "text" : "Account Tree"  , "state": { "opened" : true} }';
                        myjsoninside = myjsoninside + ' ,{ "id" : "' + response.records[i].Parent_Account__r.Id + '", "parent" : "01" , "text" :' + ' "' + mynvl(response.records[i].Parent_Account__r.Name) + '"';

                        myjsoninside = myjsoninside + ', "data": {';
                        myjsoninside = myjsoninside + '"tcv" : ' + ' "' + mynvl(response.records[i].Parent_Account__r.Total_Contract_Value__c, 'tcv' + response.records[i].Parent_Account__r.Type) + '" ,';

                        myjsoninside = myjsoninside + '"tas" : ' + ' "' + fillagentspend(mynvl(response.records[i].Parent_Account__r.Total_Contract_Value__c, 'number'), response.records[i].Parent_Account__r.Type, 'string') + '" ,';



                        myjsoninside = myjsoninside + '"thv" :' + ' "' + mynvl(response.records[i].Parent_Account__r.Total_HLC__c, 'number') + ' " ,';
                        myjsoninside = myjsoninside + '"noofoffices" :' + '" ' + mynvl(response.records[i].Parent_Account__r.Total_Offices__c, 'offices' + response.records[i].Parent_Account__r.Type) + '" ,';
                        myjsoninside = myjsoninside + '"noofagents" :' + '" ' + mynvl(response.records[i].Parent_Account__r.Total_Agents__c, 'number') + '" ,';
                        myjsoninside = myjsoninside + '"totalclc" :' + '" ' + mynvl(response.records[i].Parent_Account__r.Total_CLC__c, 'number') + '" ,';
                        myjsoninside = myjsoninside + '"reltype" :' + '" ' + mysubsitute(response.records[i].Parent_Account__r.Type) + '" ,';
                        myjsoninside = myjsoninside + '"phone" :' + '" ' + formatPhone(mynvl(response.records[i].Parent_Account__r.Phone, 'string')) + '" ,';
                        myjsoninside = myjsoninside + '"primarymls" :' + '" ' + mynvl(response.records[i].Parent_Account__r.MLS_Set_Id__c, 'string') + '" ,';
                        myjsoninside = myjsoninside + '"relationship" :' + '" ' + mynvl('-', 'string') + '" ,';
                        myjsoninside = myjsoninside + '"franchise" :' + '" ' + mynvl(response.records[i].Parent_Account__r.Franchise_Type__c, 'string') + '" ,';
                        myjsoninside = myjsoninside + '"owner" :' + '" ' + mynvl(response.records[i].Parent_Account__r.Account_Owner_Full__c, 'string') + '" ,';
                        myjsoninside = myjsoninside + '"subtype" :' + '" ' + mysubsitute(mynvl(response.records[i].Parent_Account__r.Account_Sub_Type__c, 'string')) + '" ,';



                        myjsoninside = myjsoninside + '"primaryhlc" :' + '" ' + mynvl(response.records[i].Parent_Account__r.Primary_HLC__c, 'string') + '" ';


                        myjsoninside = myjsoninside + "}";
                        myjsoninside = myjsoninside + ' }';


                        if ((checkfornull(response.records[i].Parent_Account__r.Id) === false) && (checkfornull(response.records[i].Child_Account__r) === false)) {
                            fillMLS(response.records[i].Parent_Account__r.Id, response.records[i].Parent_Account__r.Type, response.records[i].Child_Account__r.Id, response.records[i].Child_Account__r.Type);
                        }

                        bFirstNode = false;


                    }

                    if (checkfornull(response.records[i].Child_Account__r) != true) {
                        var retvalue = checkduplicate1(response.records[i].Child_Account__r.Id, response.records[i].Parent_Account__r.Id, 'Child');

                        if (retvalue != 1) {


                            if ((response.records[i].Is_Parent_Primary__c === false) && (response.records[i].Child_Account__r.Type === 'Realtor Agent')) {
                                mycntr = mycntr + 1;


                                myjsoninside = myjsoninside + ', { "id" : "' + response.records[i].Child_Account__r.Id + '_' + mycntr + '"';
                               
                            } else {
                                myjsoninside = myjsoninside + ', { "id" : "' + response.records[i].Child_Account__r.Id + '"';

                            }
                            
                            console.log(globalCountVal); AgentDataVal[globalCountVal]=[[""],[response.records[i].Child_Account__r.Name],[response.records[i].Child_Account__r.Type],[response.records[i].Child_Account__r.MLS_Set_Id__c],[response.records[i].Child_Account__r.Phone],[response.records[i].Child_Account__r.Total_Offices__c],[response.records[i].Child_Account__r.Total_Agents__c],[response.records[i].Child_Account__r.Total_HLC__c],[response.records[i].Child_Account__r.Total_CLC__c],[response.records[i].Child_Account__r.Total_Contract_Value__c],[response.records[i].Child_Account__r.Franchise_Type__c],[response.records[i].Child_Account__r.Account_Sub_Type__c],[response.records[i].Child_Account__r.Account_Owner_Full__c],[response.records[i].Relationship_Type__c],[response.records[i].Parent_Account__r.Name],[response.records[i].Parent_Account__r.Type],[response.records[i].Parent_Account__r.Total_HLC__c],[response.records[i].Parent_Account__r.Total_CLC__c],[response.records[i].Parent_Account__r.Total_Offices__c],[response.records[i].Parent_Account__r.Total_Agents__c],[response.records[i].Child_Account__r.Id]]; 
                            globalCountVal++;
                            myjsoninside = myjsoninside + ' , "parent" : "' + response.records[i].Parent_Account__r.Id + '" ,';
                            myjsoninside = myjsoninside + '  "text" : ' + '"' + mynvl(response.records[i].Child_Account__r.Name, 'string') + '"';

                            myjsoninside = myjsoninside + ', "data": {';
                            myjsoninside = myjsoninside + '"tcv" : ' + ' "' + mynvl(response.records[i].Child_Account__r.Total_Contract_Value__c, 'tcv' + response.records[i].Child_Account__r.Type) + '" ,';

                            myjsoninside = myjsoninside + '"tas" : ' + ' "' + fillagentspend(mynvl(response.records[i].Child_Account__r.Total_Contract_Value__c, 'number'), response.records[i].Child_Account__r.Type) + '" ,';


                            myjsoninside = myjsoninside + '"thv" :' + ' "' + mynvl(response.records[i].Child_Account__r.Total_HLC__c, 'number') + ' " ,';
                            myjsoninside = myjsoninside + '"noofoffices" :' + '" ' + mynvl(response.records[i].Child_Account__r.Total_Offices__c, 'offices' + response.records[i].Child_Account__r.Type) + '" ,';
                            myjsoninside = myjsoninside + '"noofagents" :' + '" ' + mynvl(response.records[i].Child_Account__r.Total_Agents__c, 'number') + '" ,';
                            myjsoninside = myjsoninside + '"totalclc" :' + '" ' + mynvl(response.records[i].Child_Account__r.Total_CLC__c, 'number') + '" ,';
                            myjsoninside = myjsoninside + '"reltype" :' + '" ' + mysubsitute(response.records[i].Child_Account__r.Type) + '" ,';
                            myjsoninside = myjsoninside + '"phone" :' + '" ' + formatPhone(mynvl(response.records[i].Child_Account__r.Phone, 'string')) + '" ,';
                            myjsoninside = myjsoninside + '"primarymls" :' + '" ' + mynvl(response.records[i].Child_Account__r.MLS_Set_Id__c, 'string') + '" ,';
                            myjsoninside = myjsoninside + '"relationship" :' + '" ' + mynvl(response.records[i].Relationship_Type__c, 'string') + '" ,';
                            myjsoninside = myjsoninside + '"franchise" :' + '" ' + mynvl(response.records[i].Child_Account__r.Franchise_Type__c, 'string') + '" ,';
                            myjsoninside = myjsoninside + '"owner" :' + '" ' + mynvl(response.records[i].Child_Account__r.Account_Owner_Full__c, 'string') + '" ,';
                            myjsoninside = myjsoninside + '"subtype" :' + '" ' + mysubsitute(mynvl(response.records[i].Child_Account__r.Account_Sub_Type__c, 'string')) + '" ,';

                            myjsoninside = myjsoninside + '"primaryhlc" :' + '" ' + mynvl(response.records[i].Child_Account__r.Primary_HLC__c, 'number') + '" ';


                            myjsoninside = myjsoninside + "}";
                            myjsoninside = myjsoninside + ' }';

                            if ((checkfornull(response.records[i].Parent_Account__r.Id) === false) && (checkfornull(response.records[i].Child_Account__r) === false)) {

                                fillMLS(response.records[i].Parent_Account__r.Id, response.records[i].Parent_Account__r.Type, response.records[i].Child_Account__r.Id, response.records[i].Child_Account__r.Type);

                            }
                            mypartialjson = myjsoninside;

                        }



                    }

                    if (checkfornull(response.records[i].Child_Account__r) != true) {


                        if (myjsoncomplete === false)

                        {

                            if ((checkfornull(response.records[i].Child_Account__r.Type) != true) && (checkfornull(response.records[i].Parent_Account__r.Type) != true)) {

                                var str = response.records[i].Child_Account__r.Id;
                                if (str.length > 10) {
 
                                    if (checkduplicate1(response.records[i].Parent_Account__r.Id, response.records[i].Child_Account__r.Id, 'Parent') === 0) {

                                        
                                        firstNodeLoad(response.records[i].Child_Account__r.Id);

                                    }


                                }

                            } // dont fill up childs If Agent records 

                        }

                    }

                }

                myjsonthreadcompleted = myjsonthreadcompleted + 1;;

            }

            if (myjsonthreadcompleted === myjsonthreadstarted) {

                myjsoncomplete = true;
            }

            if ((myjsoncomplete === true) || (NoofRows > BatchSize)) {

                if (myjsoncomplete === true) {
                    myjsoninside = '[' + myjsoninside + ']';
                }

                if ((myjsoncomplete === true) && (bPartialLoad === false)) {
                    
                    var json = JSON.parse(myjsoninside);




                    loadtree(json);

                } else // if myjson us not filled but no of rows are high
                {
                    if ((bPartialLoad === false) && (NoofRows > BatchSize)) {
                        bPartialLoad = true;

                        var tempjson = myjsoninside;
                        // Deep copy
                        var partialjson = JSON.parse('[' + tempjson + ']');

                        loadtree(partialjson);

                    }
                    new_time = new Date();

                    seconds_passed = (new_time.getTime() - StoredOldTime);

                    var Seconds_from_T1_to_T2 = seconds_passed / 1000;
                    var Seconds_Between_Dates = Math.abs(Seconds_from_T1_to_T2);
                    seconds_passed = Seconds_Between_Dates;



                }

            }
        }

        //////////////////////////////////////////////////
        //
        // Add each node
        //
        /////////////////////////////////////////////////       

        function addNode(localParentId, nodeName, nodeId, hasChildren) {

            ////////////////////////////////////////////
            //
            // Create a new node on the tree
            //
            ////////////////////////////////////////////


            hasChildren = true;

            if (hasChildren) {

                /// If it has children we load the node a little differently

                $j("#jstree").jstree("create", $j("#" + localParentId), "inside", {
                    "data": nodeName,
                    "state": "closed",
                    "attr": {
                        "id": nodeId,
                        "rel": "children"
                    }
                }, null, true);

            
            } else {

                localParentId = "001g000000Zs31s";
                nodeId = "001g000000Zs32J";
                $j("#jstree").jstree("create", $j("#" + localParentId), "inside", {
                    "data": nodeName,
                    "state": "leaf",
                    "attr": {
                        "id": nodeId,
                        "rel": "noChildren"
                    }
                }, null, true);

                var parent = '#';
                var node = {
                    id: 123,
                    text: "Hello world"
                };
                $j('#jstree').jstree('create_node', parent, node, 'last');

            }

        }
/*function is not working*/
        function loadjson(tree, node, cb, Id) {

            myjson = [{
                        "id": "01",
                        "parent": "#",
                        "text": "Account Tree"
                    }, {
                        "id": "001g000000Zs31sAAB",
                        "parent": "01",
                        "text": "CENTURY 21 REAL ESTATE LLC",
                        'data': {
                            'tcv': '$200000',
                            'tas': '$150000',
                            'thv': '$500000',
                            'noofoffices': '105',
                            'noofagents': '500',
                            'totalclc': '14',
                            'reltype': 'Corporation',


                        }
                    }, {
                        "id": "001g000000Zs32J",
                        "parent": "001g000000Zs31sAAB",
                        "text": "CENTURY 21 GATEWAY PROPERTIES",
                        'data': {
                            'tcv': '$120000',
                            'tas': '$115000',
                            'thv': '$15000',
                            'noofoffices': '5',
                            'noofagents': '50',
                            'totalclc': '12',
                            'reltype': 'Broker',
                        }
                    }, {
                        "id": "001g000000Zs2zm",
                        "parent": "001g000000Zs31sAAB",
                        "text": "Century 21 Lawrence Realty Bro",
                        'data': {
                            'tcv': '$100000',
                            'tas': '$70000',
                            'thv': '$19000',
                            'noofoffices': '5',
                            'noofagents': '100',
                            'totalclc': '5',
                            'reltype': 'Broker',
                        }
                    }, {
                        "id": "001g000000Zs303",
                        "parent": "001g000000Zs2zm",
                        "text": "C21/ LAWRENCE REALTY",
                        'data': {
                            'tcv': '$25000',
                            'tas': '$33000',
                            'thv': '$10000',
                            'noofoffices': '0',
                            'noofagents': '15',
                            'totalclc': '3',
                            'reltype': 'Realtor Office',
                        }
                    }, {
                        "id": "001g000000Zs30C",
                        "parent": "001g000000Zs2zm",
                        "text": "C21 LAWRENCE REALTY, INC.",
                        'data': {
                            'tcv': '$25000',
                            'tas': '$33000',
                            'thv': '$15000',
                            'noofoffices': '0',
                            'noofagents': '9',
                            'totalclc': '25',
                            'reltype': 'Realtor Office',
                        }
                    }, {
                        "id": "001g000000Zs2uM",
                        "parent": "001g000000Zs303",
                        "text": "Edward Zweig",
                        'data': {
                            'tcv': '$25000',
                            'tas': '$33000',
                            'thv': '$8000',
                            'noofoffices': '0',
                            'noofagents': '1',
                            'totalclc': '0',
                            'reltype': 'Realtor Agent',
                        }
                    }, {
                        "id": "001g000000Zs2ub",
                        "parent": "001g000000Zs303",
                        "text": "Steven Houghtaling",
                        'data': {
                            'tcv': '$27000',
                            'tas': '$35000',
                            'thv': '$17000',
                            'noofoffices': '0',
                            'noofagents': '1',
                            'totalclc': '0',
                            'reltype': 'Realtor Agent',
                        }
                    }, {
                        "id": "001g000000Zs2uQ",
                        "parent": "001g000000Zs303",
                        "text": "Joyce Vargas",
                        'data': {
                            'tcv': '$25000',
                            'tas': '$33000',
                            'thv': '$12000',
                            'noofoffices': '0',
                            'noofagents': '1',
                            'totalclc': '0',
                            'reltype': 'Realtor Agent',
                        }
                    }

                    ,
                ]

            cb.call(this, myjson);

            firstNodeLoad(tree, node, cb, Id);
 
        }

        function getRootId(startNodeId, level) {
            level = level + 1;
            var i = 0;

            if (checkfornull(startNodeId) != true) {

                var query = "select Parent_Account__c ,name ,Id,Parent_Account__r.Name ,Parent_Account__r.Total_Agents__c ,Parent_Account__r.Total_CLC__c,parent_Account__r.ID ,Active__c,Billing_Contact__c,Billing_Contact_Unique__c,Broker_of_Record__c ,Child_Account__r.Id,Child_Account__r.Name ,Child_Account__r.Total_Offices__c ,Child_Account__r.Total_Agents__c ,Child_Account__r.Total_CLC__c ,Child_Account__r.Total_HLC__c , Child_Account__r.Type ,Parent_Account__r.Type "
                var query = query + " from Account_Relationship__c where Child_Account__r.Id = '" + startNodeId + "'" + " And Active__c = True and Relationship_Type__c != 'Contact' ";

                client.query(query, function(response) {

                    if (response.records.length > 0) {

                        if (checkfornull(response.records[i].Parent_Account__c) != true) {
                            if ((level < 9) || (response.records[i].Is_Parent_Primary__c === false)) {
                                getRootId(response.records[i].Parent_Account__r.Id, level);


                            } else {
                                MasterRootId = startNodeId;
                                firstNodeLoad(startNodeId);

                            }
                        }


                    } else {

                        MasterRootId = startNodeId;


                        firstNodeLoad(startNodeId);

                    }

                });

            } else {
                alert('Account id is null ');

            }

        }

/* check the variable or object holding null, undefined and empty return true*/
        function checkfornull(mystring) {

            if ((mystring === null) || (mystring === '') || (mystring === undefined) || (typeof mystring === "undefined") || jQuery.isEmptyObject(mystring) === true || (mystring === 'Realtor Agent')) {
                return true;
            } else {
                return false;
            }


        }


        function mysubsitute(mystring) {
            if (mystring === 'Real Estate Corporation') {
                mystring = "Corporation";
            }

            if (mystring === 'Former Customer') {
                mystring = "Former";
            }

            return mystring;
        }



/* removing invisible Character and / and assign - for empty string or null*/
        function mynvl(mystring, type) {

            if ((mystring === null) || (mystring === '') || (mystring === undefined) || (typeof mystring === "undefined") || checkfornull(mystring) === true) {
                if (type === 'string') {

                    mystring = "-";


                } else if (type === 'tcvRealtor Office') {

                    mystring = "-";


                } else if (type === 'officesRealtor Office') {

                    mystring = "-";


                } else if (type === 'officesRealtor Agent') {
 
                    mystring = "-";


                } else {
                    mystring = "0";
                }
            }

            if (type === 'officesRealtor Office') {

                mystring = "-";


            }
            if (type === 'officesRealtor Agent') {

                mystring = "-";


            }


            var str = mystring.toString();
            str = str.replace(/\"/g, "");
            str = str.replace(/[\x00-\x1F\x7F-\x9F]/g, "");
            str = str.replace(/\,/g, "");
            
            /*CRM-1227 - Sonali Bhardwaj - Code to replace backslash*/
            str = str.replace(/\\/g, "");

            mystring = str;
            return mystring;

        }


        if ((AccountId != null) || (AccountId != '')) {

            if (AccountId.length > 10) {

                if (chkLoadAll === false)

                {

                    if (mAccType === 'Realtor Agent') {
                        AccountId = getRootId(AccountId, 7);
                    } else {
                        firstNodeLoad(AccountId);
                    }




                } else {

                    AccountId = getRootId(AccountId, 0);
                }
            }

        }


        function fillMLS(myparent, parenttype, mychild, childtype) {

            try {

                MLS.push({
                    myparent,
                    parenttype,
                    mychild,
                    childtype
                });

                return true;

            } catch (e) {
                return true;

            }

        }


        function getMLS(myparentid, mytype, mstart) {

            var OffArray = [];

            var bParentFlag = false;
            var MaxLength;

            try {

                if (MLS.length > 400 && MLS.length > mstart) {
                    MaxLength = mstart + 400;
                } else {

                    MaxLength = MLS.length;

                }

                var mychildid;

                for (var i = mstart, n = MaxLength; i < n; i++) {

                    var obj = MLS[i];

                    if ((obj.myparent === myparentid) || (myparentid === MasterRootId) || (OffArray.indexOf("'" + obj.mychild + "'") > -1) || (OffArray.indexOf("'" + obj.myparent + "'") > -1) || (OffMasterArray.indexOf(obj.mychild) > -1) || (OffMasterArray.indexOf(obj.myparent) > -1)) {

                        var idx = OffMasterArray.indexOf(myparentid);

                        if (idx === -1)
                        {
                            OffArray.push("'" + obj.myparent + "'");
                            OffMasterArray.push(obj.myparent);
                        }

                        var idx1 = OffMasterArray.indexOf(obj.mychild);

                        if (idx1 === -1) {
                            OffArray.push("'" + obj.mychild + "'");
                            OffMasterArray.push(obj.mychild);
                            mychildid = obj.mychild;
                        }

                    }

                }

                return OffArray.join(', ');

            } catch (e) {
                return '';

            }

        }


        function fillagentspend(myvalue, mytype) {
            if (mytype === 'Realtor Agent') {
                return myvalue;
            } else {
                return 0;

            }


        }
/* Load text which in top of the table */
        function loadRelationShipText(myId, myName, myFilter, mytype, myprimarymls, mylevel, selectednode, mylength, mycurrentindex) {
            var mytext = '';
            var myselectednode = '';
            var myIdArray = [];

            if (myId === MasterRootId || myId === AccountId) {
                bLoadedText = false;


            } else {
                return true;
            }

            if ((checkfornull(myId) === false) && (bLoadedText === false)) {

                if (mylevel <= 2) {
                    var query = "select Parent_Account__c ,name ,Id,Parent_Account__r.Name ,Parent_Account__r.Total_Agents__c ,Parent_Account__r.Total_CLC__c,Parent_Account__r.ID ,Active__c,Billing_Contact__c,Billing_Contact_Unique__c,Broker_of_Record__c ,Child_Account__r.Id,Child_Account__r.Name ,Child_Account__r.Total_Offices__c ,Child_Account__r.Total_Agents__c ,Child_Account__r.Total_CLC__c ,Child_Account__r.Total_HLC__c , Child_Account__r.Type ,Parent_Account__r.Type ,Relationship_Type__c"
                    var query = query + " from Account_Relationship__c where Child_Account__r.Id = '" + myId + "'" + " And Active__c = True and Relationship_Type__c != 'Contact' ";

                    client.query(query, function(response) {

                        var mylink1;

                        if (response.records.length > 0) {

                            mytext = mytext + response.records.length + ' Parent records. '
                            for (var i = 0; i < response.records.length; i++) {
                                //CRM-6120: Removed harcoded URL
                                mylink1 = '<a target="_blank" href="/apex/AccountTree?id=' + response.records[i].Parent_Account__r.Id + ' ">' + response.records[i].Parent_Account__r.Name + '</a>';

                                mytext = mytext + "<br></br>" + " " + (i + 1) + "." + " " + mylink1 + " : " + response.records[i].Relationship_Type__c + " , " + response.records[i].Parent_Account__r.Type;

                                myIdArray.push(response.records[i].Parent_Account__r.Id);
                            }
                            mytext = mytext + ' ';


                            if (selectednode === '') {
                                myselectednode = mytext;
                                //CRM-6120
                                var mylink = '<a target="_blank" href="/apex/AccountTree?id=' + myId + ' ">' + myName + '</a>';



                                $('#dbg').html('Selected : ' + myName + " , " + myId + " - " + mytype + " - Primary MLS:" + myprimarymls);

                                $('#dbg1').html(myselectednode);


                            } else {

                                myselectednode = selectednode + mytext;

                                var mylink = '<a target="_blank" href="/apex/AccountTree?id=' + myId + ' ">' + myName + '</a>';

                                $('#dbg').html('Selected : ' + myName + " , " + myId + " - " + mytype + " - Primary MLS:" + myprimarymls);

                                $('#dbg1').html(myselectednode);

                                if (mylength === mycurrentindex + 1) {
                                    bLoadedText = true;
                                }

                            }



                        }

                        for (k = 0; k < myIdArray.length; k++) {
                            loadRelationShipText(myIdArray[k], myName, myFilter, mytype, myprimarymls, 2, myselectednode, myIdArray.length, k);

                        }
                    });
                }

            }

            return true;
        }


        /*load the Data table by sending query and push in to array, assign that array to datatable plugin*/
        function loadDataTable(myId, myName, myFilter, mytype, whoCalled) {
     
            $('#overlay').show();
            var myMLS = [];
            var myProducts = [];
            var myAssets = [];
            var myMLS1 = [
                ["", "MLSSet", "MLSState", "MLSID", "MLSAlias", "RealtorType", "RealtorCity", "OfficeName", "AgentName", "HLC", "CLC", "CustID", "Primary CustID", "Franchise", "BOB", "AEName", "AEPhone", "Campaign Info", "L", "FH", "FAC", "Campaign Live", "RealtorID"]
            ];
            var query;
            var myListings = [];
            var myPayments = [];
            var myCase = [];
            var myLead = [];
            var mySubscriptions = [];

            var myAgentView = [];
            var mstart = 0;
            var mLength = 0;
            var mLoop = 0;
            var mThreadDTCompleted = false;
            var myOff=[];
                
            myId = myId.split("_")[0];//CRM-6120
            //alert(myFilter);
            try {

                if (checkfornull(myFilter) === true) {

                    myFilter = "MLS";
                }


                if (checkfornull(mytype) === true) {

                    mytype = "Realtor Office";
                }

                mytype = mytype.trim();



                var x = document.getElementById("mlsactive").name;
                if ($("#mlsactive").is(':checked')) {

                    mlsactive = "'Active'";
                    caseactive = true;


                } else {
                    mlsactive = "'Active','Inactive'";
                    caseactive = "'true','false'";

                }

                if (checkfornull(myId) === false && myId.length > 1) {

                    mLength = MLS.length;
                    var mIncrement = MLS.length % 400;

                    if (mIncrement > 0) {

                        mLoop = (parseInt(MLS.length / 400)) + 1;
                    } else {
                        mLoop = (parseInt(MLS.length / 400));


                    }

                    mstart = 0;

                    if (mytype === 'Realtor Agent' || (mytype === 'Realtor Office')) {
                        mLoop = 1;
                    }

                    var TotalRecords = 0;

                    for (var myctr = 0; myctr < mLoop; myctr++) {

                        if (myctr === 0) {

                            OffMasterArray = [];
                            TotalRecords = 0;

                        }

                        if (mytype != 'Realtor Agent') {

                            myOff = getMLS(myId, mytype, mstart);

                            if (mstart <= mLength) {
                                mstart = mstart + 400;
                            }


                        }

                        if ((checkfornull(myOff) === false) || (myOff.length > 0) || (mytype === 'Realtor Office') || (mytype === 'Realtor Agent'))

                        {
                            
                        switch(myFilter)
                        {
                            
                            case 'MLS':
                                if ((mytype === 'Realtor Office') || (mytype === 'Realtor Agent'))

                                {

                                    query = "SELECT MLS_Set_ID__c,HLC__c,CLC__c,MLS_Area_Source_Reference__c,MLS_Set_Type__c,Start_Date__c,End_Date__c,Status__c,Primary_MLS_Set__c,Agent__c,Broker_NAR_ID__c,MLS__c,MLS_City__c,MLS_State__c,Office__c,Agent_Name__c,Office_Name__c,MLS_Email__c,MLS_Phone__c,MLS_Postal_Code__c,MLS_Street_Address__c  FROM MLS__c WHERE (Office__c ='" + myId + "'" + " OR Agent__c='" + myId + "')" + ' AND Status__c IN (' + mlsactive + ')';

                                    //      console.log(query);


                                } else {

                                    if ((checkfornull(myOff) === true) || (myOff.length === 0)) {
                                        query = "SELECT MLS_Set_ID__c,HLC__c,CLC__c,MLS_Area_Source_Reference__c,MLS_Set_Type__c,Start_Date__c,End_Date__c,Status__c,Primary_MLS_Set__c,Agent__c,Broker_NAR_ID__c,MLS__c,MLS_City__c,MLS_State__c,Office__c,Agent_Name__c,Office_Name__c,MLS_Email__c,MLS_Phone__c,MLS_Postal_Code__c,MLS_Street_Address__c  FROM MLS__c WHERE (Office__c ='" + myId + "'" + " OR Agent__c='" + myId + "')" + ' AND Status__c IN (' + mlsactive + ')';


                                    } else {
                                        query = "SELECT MLS_Set_ID__c,HLC__c,CLC__c,MLS_Area_Source_Reference__c,MLS_Set_Type__c,Start_Date__c,End_Date__c,Status__c,Primary_MLS_Set__c,Agent__c,Broker_NAR_ID__c,MLS__c,MLS_City__c,MLS_State__c,Office__c,Agent_Name__c,Office_Name__c,MLS_Email__c,MLS_Phone__c,MLS_Postal_Code__c,MLS_Street_Address__c  FROM MLS__c WHERE Office__c IN (" + myOff + ")" + ' AND Status__c IN (' + mlsactive + ')';
                                    }

                                }
                                break;
                                
                              case 'Products':

                                if ((checkfornull(myOff) === true) || (myOff.length === 0)) {
                                    query = "SELECT Name ,Type ,Email_Address__c,Own_Co_Broke__c,Own_Cycle__c,Own_DAP__c,Own_DAC__c,Own_Doorsteps__c,Own_Domain_Name__c,Own_FCMA__c,Own_FAC__c,Own_LH__c,Own_Market_Builder__c,Own_MS__c,Own_CoShow__c"; 

                                    query = query + ", Own_OSR__c, Own_SLE__c ,MLS_Set_Id__c,Own_OSL__c,Own_TP_CRM__c,Own_IDX__c,Own_TP_Website__c,Own_Office_Website__c,Own_FS__c,Phone,HANDRAISER__C,HOMESRCH__C,Id  FROM Account WHERE Id ='" + myId + "'";


                                } else {
                                    query = "SELECT Name ,Type ,Email_Address__c,Own_Co_Broke__c,Own_Cycle__c,Own_DAP__c,Own_DAC__c,Own_Doorsteps__c,Own_Domain_Name__c,Own_FCMA__c,Own_FAC__c,Own_LH__c,Own_Market_Builder__c,Own_MS__c,Own_CoShow__c"; 

                                    query = query + ",Own_OSR__c, Own_SLE__c ,MLS_Set_Id__c,Own_OSL__c,Own_TP_CRM__c,Own_IDX__c,Own_TP_Website__c,Own_Office_Website__c,Own_FS__c,Phone,HANDRAISER__C,HOMESRCH__C,Id FROM Account WHERE Id IN (" + myOff + ")";

                                }
                                break;
                            case 'Asset':
                            if ((checkfornull(myOff) === true) || (myOff.length === 0)) {
                                    var query = "SELECT Extended_Net_Price__c,Asset_Type__c,Contract_Term__c,End_Date__c,Fulfillment_Status__c,Id,Include_Asset__c,Lead_Type__c,Total_Net__c,Market__c,Name,Parent_Asset__c,Account_Name__c,Strategic_Discount__c,Product_Email__c,Quantity,Start_Date__c,Status,Total_Discount_Amount__c,Ultimate_Parent__c ,Parent_Asset_Name__c,Ultimate_Parent_Asset_Name__c,Account_MLS_Set_Id__c,Account_Type__c,AccountId";

                                    query = query + "  FROM Asset WHERE AccountId ='" + myId + "'" + ' AND Status IN (' + mlsactive + ')' + " AND Account_Type__c IN ('Realtor Office','Realtor Agent') AND ASSET_TYPE__C ='Fulfill To'";

                                } else {
                                    var query = "SELECT Extended_Net_Price__c,Asset_Type__c,Contract_Term__c,End_Date__c,Fulfillment_Status__c,Id,Include_Asset__c,Lead_Type__c,Total_Net__c,Market__c,Name,Parent_Asset__c,Account_Name__c,Strategic_Discount__c,Product_Email__c,Quantity,Start_Date__c,Status,Total_Discount_Amount__c,Ultimate_Parent__c ,Parent_Asset_Name__c,Ultimate_Parent_Asset_Name__c,Account_MLS_Set_Id__c,Account_Type__c,AccountId";

                                    query = query + "  FROM Asset WHERE AccountId IN (" + myOff + ")" + " AND Status IN (" + mlsactive + ")" + " AND Account_Type__c IN ('Realtor Office','Realtor Agent') AND ASSET_TYPE__C ='Fulfill To'";


                                }
                            break;
                                

                            case 'BrokerAsset':
                                if ((checkfornull(myOff) === true) || (myOff.length === 0)) {
                                    var query = "SELECT Extended_Net_Price__c,Asset_Type__c,Contract_Term__c,End_Date__c,Fulfillment_Status__c,Id,Include_Asset__c,Lead_Type__c,Total_Net__c,Market__c,Name,Parent_Asset__c,Account_Name__c,Strategic_Discount__c,Product_Email__c,Quantity,Start_Date__c,Status,Total_Discount_Amount__c,Ultimate_Parent__c ,Parent_Asset_Name__c,Ultimate_Parent_Asset_Name__c,Account_MLS_Set_Id__c,Account_Type__c,AccountId";

                                    query = query + "  FROM Asset WHERE AccountId ='" + myId + "'" + ' AND Status IN (' + mlsactive + ')' + " AND Account_Type__c IN ('Broker','Realtor Office') ";

                                } else {
                                    var query = "SELECT Extended_Net_Price__c,Asset_Type__c,Contract_Term__c,End_Date__c,Fulfillment_Status__c,Id,Include_Asset__c,Lead_Type__c,Total_Net__c,Market__c,Name,Parent_Asset__c,Account_Name__c,Strategic_Discount__c,Product_Email__c,Quantity,Start_Date__c,Status,Total_Discount_Amount__c,Ultimate_Parent__c ,Parent_Asset_Name__c,Ultimate_Parent_Asset_Name__c,Account_MLS_Set_Id__c,Account_Type__c,AccountId";

                                    query = query + "  FROM Asset WHERE AccountId IN (" + myOff + ")" + ' AND Status IN (' + mlsactive + ')' + "  AND Account_Type__c IN ('Broker','Realtor Office') ";


                                }
                                break;

                                case 'Account Listings':
                                if ((checkfornull(myOff) === true) || (myOff.length === 0)) {
                                    query = "SELECT Name ,Account_Type__c,Listing_Count__c,Listing_Type__c,Zip__c  ,CFCB_City_Fast__c,CFCB_City_Flex__c,CFCB_City_Half_Fast__c,CFCB_City_Half_Flex__c,CFCB_Full_Fast__c,CFCB_Full_Flex__c,CFCB_FULL_TIER__c,CFCB_Half_Fast__c,CFCB_Half_Flex__c,CFCB_HALF_TIER__c,DAP__c,FAC_COMP_Qty__c,FAC_LB_Qty__c,FAC_MREC_Qty__c,FH__c,Hand_Raiser__c,Home_Search__c,Account_Name__c FROM Account_Listing__c ";

                                    query = query + "WHERE Parent_Agent_Broker__c ='" + myId + "'";

                                } else {
                                    query = "SELECT Name ,Account_Type__c,Listing_Count__c,Listing_Type__c,Zip__c  ,CFCB_City_Fast__c,CFCB_City_Flex__c,CFCB_City_Half_Fast__c,CFCB_City_Half_Flex__c,CFCB_Full_Fast__c,CFCB_Full_Flex__c,CFCB_FULL_TIER__c,CFCB_Half_Fast__c,CFCB_Half_Flex__c,CFCB_HALF_TIER__c,DAP__c,FAC_COMP_Qty__c,FAC_LB_Qty__c,FAC_MREC_Qty__c,FH__c,Hand_Raiser__c,Home_Search__c,Account_Name__c FROM Account_Listing__c ";

                                    query = query + " WHERE Parent_Agent_Broker__c IN (" + myOff + ")";

                                }
                                break;

                            case'Case':
                                if ((checkfornull(myOff) === true) || (myOff.length === 0)) {
                                    query = "Select Account_Time_Zone__c,ApprovalAmount__c,Area__c,AtRisk__c,Billing_Preference__c,CaseNumber,Case_Comment_Count__c,Case_Priority__c,Contact_Do_Not_Call__c,CreatedDate,Description,IsClosed,IsEscalated,Is_Tiger_Lead__c,Last_Worked__c,OriginDesc__c,Outcome__c,Ownership_Type__c,Owner_Name__c,Payment_Method__c,Priority,Product_Category__c,Reason,Related_Contact_FirstName__c,Related_Contact_LastName__c,SLA_Achieved__c,SLA_Date_Time__c,Status,Subject,SubStatus__c,Sub_Area__c,Total_At_Risk_Amount__c,Type,AccountId,Account.Name,Account.Type,Account.MLS_Set_Id__c FROM Case";

                                    query = query + " WHERE AccountId ='" + myId + "'";

                                } else {
                                    query = "Select Account_Time_Zone__c,ApprovalAmount__c,Area__c,AtRisk__c,Billing_Preference__c,CaseNumber,Case_Comment_Count__c,Case_Priority__c,Contact_Do_Not_Call__c,CreatedDate,Description,IsClosed,IsEscalated,Is_Tiger_Lead__c,Last_Worked__c,OriginDesc__c,Outcome__c,Ownership_Type__c,Owner_Name__c,Payment_Method__c,Priority,Product_Category__c,Reason,Related_Contact_FirstName__c,Related_Contact_LastName__c,SLA_Achieved__c,SLA_Date_Time__c,Status,Subject,SubStatus__c,Sub_Area__c,Total_At_Risk_Amount__c,Type,AccountId,Account.Name,Account.Type,Account.MLS_Set_Id__c FROM Case";

                                    query = query + " WHERE AccountId  IN (" + myOff + ")";

                                }
                            break;

                            case 'Lead':
                                if ((checkfornull(myOff) === true) || (myOff.length === 0)) {
                                    query = "Select Name   ,Phone,Company ,Available_inventory__c,Full_Flex_Available__c   ,Half_Fast_Available__c  ,Half_Fast_PreSales_Available__c ,Half_Flex_Available__c   ,Half_Flex_PreSales_Available__c ,AvailableFast__c ,AvailablePreSalesFast__c,AvailablePreSalesFlex__c,Interested_in_Connection_For_Co_Brokerag__c     ,Interested_in_FiveStreet__c ,Interested_in_Tiger_Lead__c ,Interested_in_Top_Producer_CRM__c,Status,Lead_Age__c ,Lead_Score__c,Account__c FROM Lead";
                                    query = query + " WHERE Account__c ='" + myId + "'";


                                } else {
                                    query = "Select Name    ,Phone,Company ,Available_inventory__c,Full_Flex_Available__c   ,Half_Fast_Available__c  ,Half_Fast_PreSales_Available__c ,Half_Flex_Available__c   ,Half_Flex_PreSales_Available__c ,AvailableFast__c ,AvailablePreSalesFast__c,AvailablePreSalesFlex__c,Interested_in_Connection_For_Co_Brokerag__c     ,Interested_in_FiveStreet__c ,Interested_in_Tiger_Lead__c ,Interested_in_Top_Producer_CRM__c,Status,Lead_Age__c ,Lead_Score__c,Account__c FROM Lead";
                                    query = query + " WHERE Account__c  IN (" + myOff + ")";

                                }
                                break;
                               case'Agent View':
                                if ((checkfornull(myOff) === true) || (myOff.length === 0)) {

                                    var query = "select Parent_Account__c ,name ,Id,Parent_Account__r.Name ,Parent_Account__r.Total_Agents__c ,Parent_Account__r.Total_CLC__c,parent_Account__r.ID ,Active__c,Billing_Contact__c,Billing_Contact_Unique__c,Broker_of_Record__c ,Child_Account__r.Id,Child_Account__r.Name ,Parent_Account__r.Total_Offices__c,Child_Account__r.Total_Offices__c ,Child_Account__r.Total_Agents__c ,Child_Account__r.Total_CLC__c ,Parent_Account__r.Total_HLC__c ,Child_Account__r.Total_HLC__c , Child_Account__r.Type ,Parent_Account__r.type ,Is_Parent_Primary__c ,Child_Account__r.Total_Contract_Value__c ,Parent_Account__r.Total_Contract_Value__c";
                                    query = query + ",Child_Account__r.MLS_Set_Id__c , Parent_Account__r.MLS_Set_Id__c ,Child_Account__r.Phone , Parent_Account__r.Phone ,Parent_Account__r.Primary_HLC__c,Child_Account__r.Primary_HLC__c,Relationship_Type__c,Parent_Account__r.Franchise_Type__c,Child_Account__r.Franchise_Type__c,Parent_Account__r.Account_Owner_Full__c,Child_Account__r.Account_Owner_Full__c ,Parent_Account__r.Account_Sub_Type__c,Child_Account__r.Account_Sub_Type__c  ";

                                    query = query + " from Account_Relationship__c where Parent_Account__c = '" + myId + "'";
                                    query = query + "  and Active__c = True  ORDER BY Child_Account__r.Name , Child_Account__r.MLS_Set_Id__c NULLS LAST ";

                                } else
                                {

                                    var query = "select Parent_Account__c ,name ,Id,Parent_Account__r.Name ,Parent_Account__r.Total_Agents__c ,Parent_Account__r.Total_CLC__c,parent_Account__r.ID ,Active__c,Billing_Contact__c,Billing_Contact_Unique__c,Broker_of_Record__c ,Child_Account__r.Id,Child_Account__r.Name ,Parent_Account__r.Total_Offices__c,Child_Account__r.Total_Offices__c ,Child_Account__r.Total_Agents__c ,Child_Account__r.Total_CLC__c ,Parent_Account__r.Total_HLC__c ,Child_Account__r.Total_HLC__c , Child_Account__r.Type ,Parent_Account__r.type ,Is_Parent_Primary__c ,Child_Account__r.Total_Contract_Value__c ,Parent_Account__r.Total_Contract_Value__c";
                                    query = query + ",Child_Account__r.MLS_Set_Id__c , Parent_Account__r.MLS_Set_Id__c ,Child_Account__r.Phone , Parent_Account__r.Phone ,Parent_Account__r.Primary_HLC__c,Child_Account__r.Primary_HLC__c,Relationship_Type__c,Parent_Account__r.Franchise_Type__c,Child_Account__r.Franchise_Type__c,Parent_Account__r.Account_Owner_Full__c,Child_Account__r.Account_Owner_Full__c ,Parent_Account__r.Account_Sub_Type__c,Child_Account__r.Account_Sub_Type__c  ";
                                    query = query + " from Account_Relationship__c where Parent_Account__c   IN (" + myOff + ")";
                                    query = query + "   and Active__c = True  ORDER BY Child_Account__r.Name , Child_Account__r.MLS_Set_Id__c NULLS LAST ";
                                }
                                break;
                        }
                            client.query(query, function(response) {

                                if (response.records.length > 0) {

                                    mThreadDTCompleted = false;

                                    TotalRecords = TotalRecords + response.records.length;

                                    for (var i = 0; i < response.records.length; i++) {


                                        if (myFilter === 'MLS') {
                                            var tmp = response.records[i].MLS_Set_ID__c;

                                            if ((mynvl(response.records[i].MLS_Set_ID__c, 'string') === '')) {
                                                var tmpstring = "--------";
                                            } else {
                                                tmpstring = response.records[i].MLS_Set_ID__c;

                                            }

                                            myMLS.push(["",
                                                mynvl(response.records[i].Agent_Name__c, 'string'),
                                                mynvl(response.records[i].MLS_Set_ID__c, 'string'),
                                                mynvl(response.records[i].Office_Name__c, 'string'),
                                                mynvl(response.records[i].MLS_Set_Type__c, 'string'),
                                                mynvl(response.records[i].HLC__c, 'string'),
                                                mynvl(response.records[i].CLC__c, 'string'),
                                                "",
                                                
                                                SetData(response.records[i].Primary_MLS_Set__c),
                                                mynvl(response.records[i].MLS_Street_Address__c, 'string'),
                                                mynvl(response.records[i].MLS_City__c, 'string'),

                                                mynvl(response.records[i].MLS_State__c, 'string'),
                                                mynvl(response.records[i].MLS_Postal_Code__c, 'string'), 
                                                "",
                                                mynvl(response.records[i].MLS_Area_Source_Reference__c, 'string'),

                                                mynvl(response.records[i].Start_Date__c, 'string'),
                                                mynvl(response.records[i].End_Date__c, 'string'),
                                                mynvl(response.records[i].Status__c, 'string'),
                                                mynvl(response.records[i].MLS_Email__c, 'string'),
                                                mynvl(formatPhone(response.records[i].MLS_Phone__c), 'string'),




                                                response.records[i].Agent__c
                                            ]);



                                        } // If 
                                        else if (myFilter === 'Products') {

                                            myProducts.push(["", response.records[i].Name,
                                                response.records[i].Email_Address__c, response.records[i].MLS_Set_Id__c,
                                                response.records[i].Type,                                                
                                                mynvl(formatPhone((response.records[i].Phone))),
                                                SetData(response.records[i].Own_Co_Broke__c),
                                                SetData(response.records[i].Own_CoShow__c),
                                                SetData(response.records[i].Own_DAP__c),
                                                SetData(response.records[i].HANDRAISER__C), SetData(response.records[i].Own_TP_CRM__c),
                                                SetData(response.records[i].HOMESRCH__C), SetData(response.records[i].Own_FH__c),
                                                SetData(response.records[i].Own_SLE__c), SetData(response.records[i].Own_TP_CRM__c),
                                                SetData(response.records[i].Own_FS__c), SetData(response.records[i].Own_IDX__c),
                                                SetData(response.records[i].Own_LH__c), SetData(response.records[i].Own_MS__c),
                                                SetData(response.records[i].Own_OSL__c), response.records[i].Id
                                            ]);


                                        } else if (myFilter === 'Asset')

                                        {
                                            myAssets.push(["",
                                                response.records[i].Name,
                                                response.records[i].Account_Name__c,
                                                response.records[i].Asset_Type__c,
                                                response.records[i].Quantity,
                                                response.records[i].Status,
                                                response.records[i].Fulfillment_Status__c,
                                                response.records[i].Market__c,
                                                response.records[i].Lead_Type__c,
                                                response.records[i].Start_Date__c,
                                                response.records[i].End_Date__c,
                                                response.records[i].Contract_Term__c,
                                                response.records[i].Ultimate_Parent_Asset_Name__c,
                                                response.records[i].Account_Type__c,
                                                response.records[i].Parent_Asset_Name__c,
                                                response.records[i].Total_Net__c,
                                                response.records[i].Extended_Net_Price__c,

                                                response.records[i].Total_Discount_Amount__c,
                                                mynvl(response.records[i].Account_MLS_Set_Id__c, 'string'),



                                                response.records[i].Product_Email__c,


                                                response.records[i].AccountId
                                            ]);



                                        } else if (myFilter === 'BrokerAsset')

                                        {
                                            myAssets.push(["",
                                                response.records[i].Name,
                                                response.records[i].Account_Name__c,
                                                response.records[i].Asset_Type__c,
                                                response.records[i].Quantity,
                                                response.records[i].Status,
                                                response.records[i].Fulfillment_Status__c,
                                                response.records[i].Market__c,
                                                response.records[i].Lead_Type__c,
                                                response.records[i].Start_Date__c,
                                                response.records[i].End_Date__c,
                                                response.records[i].Contract_Term__c,
                                                response.records[i].Ultimate_Parent_Asset_Name__c,
                                                response.records[i].Account_Type__c,
                                                "",
                                                response.records[i].Total_Net__c,
                                                response.records[i].Extended_Net_Price__c,

                                                response.records[i].Total_Discount_Amount__c,
                                                mynvl(response.records[i].Account_MLS_Set_Id__c, 'string'),
                                                response.records[i].Product_Email__c,
                                                response.records[i].AccountId
                                            ]);




                                        } else if (myFilter === 'Account Listings')

                                        {
                                            myListings.push(["", response.records[i].Name, response.records[i].Account_Type__c,
                                                response.records[i].Listing_Count__c, response.records[i].Listing_Type__c,
                                                response.records[i].Zip__c,
                                                response.records[i].Hand_Raiser__c,
                                                response.records[i].Home_Search__c,
                                                response.records[i].DAP__c,

                                                response.records[i].CFCB_City_Fast__c,
                                                response.records[i].CFCB_City_Flex__c,
                                                response.records[i].CFCB_City_Half_Fast__c,
                                                response.records[i].CFCB_City_Half_Flex__c,
                                                response.records[i].CFCB_Full_Fast__c,
                                                response.records[i].CFCB_Full_Flex__c,
                                                response.records[i].CFCB_FULL_TIER__c,
                                                response.records[i].CFCB_Half_Fast__c,
                                                response.records[i].CFCB_Half_Flex__c,
                                                response.records[i].CFCB_HALF_TIER__c,
                                                response.records[i].FAC_MREC_Qty__c,
                                                response.records[i].Account_Name__c
                                            ]);




                                        }else if (myFilter === 'Case')

                                        {
                                            myCase.push(["", response.records[i].CaseNumber,
                                                response.records[i].Subject,
                                                response.records[i].Status,
                                                response.records[i].SubStatus__c,
                                                response.records[i].Area__c,
                                                response.records[i].Sub_Area__c,
                                                response.records[i].Type,
                                                response.records[i].Account_Time_Zone__c,
                                                response.records[i].Priority,
                                                response.records[i].Related_Contact_FirstName__c,
                                                response.records[i].Related_Contact_LastName__c,
                                                response.records[i].Owner_Name__c,
                                                response.records[i].Account.Name,
                                                response.records[i].Account.Type,
                                                response.records[i].CreatedDate,
                                                0,
                                                response.records[i].Case_Priority__c,
                                                response.records[i].SLA_Achieved__c,
                                                response.records[i].Account.MLS_Set_Id__c,
                                                response.records[i].AccountId
                                            ]);


                                        } else if (myFilter === 'Lead')

                                        {
                                            myLead.push(["",
                                                response.records[i].Name,
                                                formatPhone(response.records[i].Phone),
                                                response.records[i].Company,
                                                mynvl(response.records[i].Available_inventory__c, 'int'),
                                                mynvl(response.records[i].Full_Flex_Available__c, 'int'),
                                                mynvl(response.records[i].Half_Fast_Available__c, 'int'),
                                                mynvl(response.records[i].Half_Fast_PreSales_Available__c, 'int'),
                                                mynvl(response.records[i].Half_Flex_Available__c, 'int'),
                                                mynvl(response.records[i].Half_Flex_PreSales_Available__c, 'int'),
                                                mynvl(response.records[i].AvailableFast__c, 'int'),
                                                mynvl(response.records[i].AvailablePreSalesFast__c, 'int'),
                                                mynvl(response.records[i].AvailablePreSalesFlex__c, 'int'),
                                                SetData(response.records[i].Interested_in_Connection_For_Co_Brokerag__c),
                                                SetData(response.records[i].Interested_in_FiveStreet__c),
                                                SetData(response.records[i].Interested_in_Tiger_Lead__c),
                                                SetData(response.records[i].Interested_in_Top_Producer_CRM__c),
                                                response.records[i].Status,
                                                response.records[i].Lead_Age__c,
                                                response.records[i].Lead_Score__c,
                                                response.records[i].Account__c
                                            ]);


                                        } else if (myFilter === 'Agent View')

                                        {
                                            
                                            if (response.records[i].Child_Account__r != null) {

                                                myAgentView.push(
                                                    ["",
                                                        response.records[i].Child_Account__r.Name,
                                                        response.records[i].Child_Account__r.Type,
                                                        response.records[i].Child_Account__r.MLS_Set_Id__c,
                                                        formatPhone(response.records[i].Child_Account__r.Phone),
                                                        response.records[i].Child_Account__r.Total_Offices__c,
                                                        response.records[i].Child_Account__r.Total_Agents__c,
                                                        response.records[i].Child_Account__r.Total_HLC__c,
                                                        response.records[i].Child_Account__r.Total_CLC__c,
                                                        response.records[i].Child_Account__r.Total_Contract_Value__c,
                                                        response.records[i].Child_Account__r.Franchise_Type__c,
                                                        response.records[i].Child_Account__r.Account_Sub_Type__c,
                                                        response.records[i].Child_Account__r.Account_Owner_Full__c,
                                                        response.records[i].Relationship_Type__c,
                                                        response.records[i].Parent_Account__r.Name,
                                                        response.records[i].Parent_Account__r.Type,
                                                        response.records[i].Parent_Account__r.Total_HLC__c,
                                                        response.records[i].Parent_Account__r.Total_CLC__c,
                                                        response.records[i].Parent_Account__r.Total_Offices__c,

                                                        response.records[i].Parent_Account__r.Total_Agents__c,
                                                        response.records[i].Child_Account__r.Id

                                                    ]);
                                            }

                                        }

                                    } // for loop

                                } // length > 0
                                mThreadDTCompleted = true;


                                var delay = 1000; //1 seconds
                                $(document).ready(function() {

                                    if (checkfornull(table) === false) {
                                        table.destroy();
                                    }

                                    if (myFilter === 'MLS') {

                                        table = $('#example').DataTable({
                                             "sScrollX": "100%",
                                             "sScrollXInner": "200%",
                                             "bScrollCollapse": true,
                                            "pagingType": "full_numbers",
                                            stateSave: true,
                                            "lengthMenu": [
                                                [10, 25, 50, 100, -1],
                                                [10, 25, 50, 100, "All"]
                                            ],
                                            'iDisplayStart': 25,
                                            "scrollCollapse": false,

                                            colReorder: {
                                                realtime: false
                                            },

                                            "order": [
                                                [1, "desc"]
                                            ],
                                            "dom": 'CRT<"datatables1_filter"f><"top"lp>rt<"bottom"lip><"clear">',

                                            "data": myMLS,

                                            "columns": [{
                                                    "className": 'details-control',
                                                    "orderable": false,
                                                    "defaultContent": '',
                                                    "data": null
                                                },

                                                {
                                                    "title": "Agent Name"
                                                }, {
                                                    "title": "MLS Set"
                                                }, {
                                                    "title": "Office Name"
                                                }, {
                                                    "title": "Realtor Type"
                                                }, {
                                                    "title": "HLC"
                                                }, {
                                                    "title": "CLC"
                                                }, {
                                                    "title": "MLS Owner"
                                                }, {
                                                    "title": "Primary MLS?"
                                                }, {
                                                    "title": "MLS Street Address"
                                                }, {
                                                    "title": "MLS City"
                                                }, {
                                                    "title": "MLS State"
                                                }, {
                                                    "title": "MLS Postal Code"
                                                },

                                                {
                                                    "title": "MLS ID"
                                                }, {
                                                    "title": "MLS Alias"
                                                },



                                                {
                                                    "title": "MLS Start Date"
                                                }, {
                                                    "title": "MLS End Date "
                                                }, {
                                                    "title": "Status"
                                                },


                                                {
                                                    "title": "MLS eMail"
                                                }, {
                                                    "title": "MLS Phone"
                                                },


                                                {
                                                    "title": "Account Id"
                                                }

                                            ],
                                            "order": [
                                                [1, 'desc']
                                            ],



                                            tableTools: {
                                                sRowSelect: "os",
                                                sSwfPath: "{!URLFOR($Resource.TableTools,'TableTools-2.2.4/swf/copy_csv_xls_pdf.swf')}",
                                                aButtons: [{
                                                        sExtends: "collection",
                                                        sButtonText: "Export",
                                                        sButtonClass: "save-collection",
                                                        aButtons: ['copy', 'csv', 'xls', 'pdf']
                                                    },
                                                    'print'
                                                ]
                                            },

                                            "footerCallback": function(row, data, start, end, display) {
                                                    var api = this.api(),
                                                        data;


                                                    if (data.length > 0) {
                                                        // Remove the formatting to get integer data for summation
                                                        var intVal = function(i) {
                                                            return typeof i === 'string' ?
                                                                i.replace(/[\$,]/g, '') * 1 :
                                                                typeof i === 'number' ?
                                                                i : 0;
                                                        };


                                                        for (j = 1; j < 21; j++) {

                                                            // Update footer
                                                            if ((j === 9 || j === 10)) {

                                                                // Total over all pages
                                                                total = api
                                                                    .column(j)
                                                                    .data()
                                                                    .reduce(function(a, b) {
                                                                        return intVal(a) + intVal(b);
                                                                    });

                                                                // Total over this page
                                                                pageTotal = api
                                                                    .column(j, {
                                                                        page: 'current'
                                                                    })
                                                                    .data()
                                                                    .reduce(function(a, b) {
                                                                        return intVal(a) + intVal(b);
                                                                    }, 0);

                                                                $(api.column(j).footer()).html(
                                                                    '( ' + pageTotal + '/' + '' + total + ' )'
                                                                );

                                                            } else // only calculate for 9 and 10 columns
                                                            {
                                                                $(api.column(j).footer()).html(
                                                                    ''
                                                                );

                                                            }



                                                        }

                                                    } // end of If data.length

                                                }, // end of footer
                                                "fnInitComplete":function(){
                                                $('#overlay').hide();
                                                }
                                        });

                                    } else if (myFilter === 'Products') {
                                        table = $('#example').DataTable({
                                             "sScrollX": "100%",
                                             "sScrollXInner": "200%",
                                             "bScrollCollapse": true,
                                            "pagingType": "full_numbers",
                                            stateSave: true,
                                            "lengthMenu": [
                                                [10, 25, 50, 100, -1],
                                                [10, 25, 50, 100, "All"]
                                            ],
                                            'iDisplayStart': 25,
                                            "scrollCollapse": false,

                                            colReorder: {
                                                realtime: false
                                            },

                                            "order": [
                                                [1, "desc"]
                                            ],
                                            "dom": 'CRT<"datatables1_filter"f><"top"lp>rt<"bottom"lip><"clear">',

                                            "data": myProducts,

                                            "columns": [{
                                                    "className": 'details-control',
                                                    "orderable": false,
                                                    "defaultContent": '',
                                                    "data": null
                                                }, {
                                                    "title": "Name"
                                                },{
                                                    "title": "Agent Email"
                                                }, {
                                                    "title": "Agent MLSSet"
                                                }, {
                                                    "title": "Type"
                                                },{                                             
                                                    "title": "Phone"
                                                }, {
                                                    "title": "CBC "
                                                }, {
                                                    "title": "ShowCase "
                                                },  {
                                                    "title": "DAP"
                                                }, {
                                                    "title": "Hand Raiser"
                                                }, {
                                                    "title": "TP CRM"
                                                },  {
                                                    "title": "Home Search"
                                                }, {
                                                    "title": "FH"
                                                }, {
                                                    "title": "Own SLE"
                                                }, {
                                                    "title": "Website"
                                                }, {
                                                    "title": "FS"
                                                }, {
                                                    "title": "IDX"
                                                }, {
                                                    "title": "LH"
                                                }, {
                                                    "title": "MS"
                                                }, {
                                                    "title": "OSL "
                                                },  {
                                                    "title": "Account Id"
                                                }
                                            ],
                                            "order": [
                                                [1, 'asc']
                                            ],



                                            tableTools: {
                                                sRowSelect: "os",
                                                sSwfPath: "{!URLFOR($Resource.TableTools,'TableTools-2.2.4/swf/copy_csv_xls_pdf.swf')}",
                                                aButtons: [{
                                                        sExtends: "collection",
                                                        sButtonText: "Export",
                                                        sButtonClass: "save-collection",
                                                        aButtons: ['copy', 'csv', 'xls', 'pdf']
                                                    },
                                                    'print'
                                                ]
                                            }

                                            ,

                                            "footerCallback": function(row, data, start, end, display) {
                                                    var api = this.api(),
                                                        data;


                                                    if (data.length > 0) {
                                                        // Remove the formatting to get integer data for summation
                                                        var intVal = function(i) {
                                                            return typeof i === 'string' ?
                                                                i.replace(/[\$,]/g, '') * 1 :
                                                                typeof i === 'number' ?
                                                                i : 0;
                                                        };


                                                        for (j = 1; j < 21; j++) {
                                                            // Total over all pages
                                                            total = api
                                                                .column(j)
                                                                .data()
                                                                .reduce(function(a, b) {
                                                                    return intVal((a === 'Yes' ? 1 : 0 || a > 0 ? a : 0)) + intVal((b === 'Yes' ? 1 : 0 || b > 0 ? a : 0));
                                                                });

                                                            // Total over this page
                                                            pageTotal = api
                                                                .column(j, {
                                                                    page: 'current'
                                                                })
                                                                .data()
                                                                .reduce(function(a, b) {
                                                                    return intVal((a === 'Yes' ? 1 : 0 || a > 0 ? a : 0)) + intVal((b === 'Yes' ? 1 : 0 || b > 0 ? a : 0));
                                                                }, 0);

                                                            // Update footer
                                                            if ((j < 4)) {

                                                                $(api.column(j).footer()).html(
                                                                    ''
                                                                );

                                                            } else // only calculate for all other Yes columns
                                                            {
                                                                $(api.column(j).footer()).html(
                                                                    '( ' + pageTotal + '/' + '' + total + ' )'
                                                                );

                                                            }

                                                        }

                                                    } // end of If data.length

                                                } // end of footer


                                            ,"fnInitComplete":function(){
                                                $('#overlay').hide();
                                                },


                                            "createdRow": function(row, data, dataIndex) {

                                                for (k = 1; k < 20; k++) {

                                                    if (data[k] === 'Yes') {

                                                        //      $('td', row).eq(1).css({'color':'red'});
                                                        $('td', row).eq(k).css({
                                                            'color': 'blue'
                                                        });
                                                        $('td', row).eq(k).css({
                                                            'background-color': 'yellow'
                                                        });


                                                    }

                                                }

                                            }
                                        });

                                    } else if (myFilter === 'Asset')

                                    {


                                        table = $('#example').DataTable({
                                             "sScrollX": "100%",
                                             "sScrollXInner": "200%",
                                             "bScrollCollapse": true,
                                            "pagingType": "full_numbers",
                                            stateSave: true,
                                            "lengthMenu": [
                                                [10, 25, 50, 100, -1],
                                                [10, 25, 50, 100, "All"]
                                            ],
                                            'iDisplayStart': 25,
                                            "scrollCollapse": false,

                                            colReorder: {
                                                realtime: false
                                            },

                                            "order": [
                                                [1, "desc"]
                                            ],

                                            "dom": 'CRT<"datatables1_filter"f><"top"lp>rt<"bottom"lip><"clear">',


                                            "data": myAssets,

                                            "columns": [{
                                                    "className": 'details-control',
                                                    "orderable": false,
                                                    "defaultContent": '',
                                                    "data": null
                                                }, {
                                                    "title": "Name"
                                                }, {
                                                    "title": "Participants"
                                                }, {
                                                    "title": "Type"
                                                }, {
                                                    "title": "Qty "
                                                }, {
                                                    "title": "Status"
                                                }, {
                                                    "title": "Fulfilment Status"
                                                }, {
                                                    "title": "Market"
                                                }, {
                                                    "title": "Lead Type"
                                                },

                                                {
                                                    "title": "Start Date"
                                                }, {
                                                    "title": "End Date"
                                                }, {
                                                    "title": "Contract Term"
                                                }, {
                                                    "title": "Ultimate Parent"
                                                }, {
                                                    "title": "Account Type"
                                                }, {
                                                    "title": "Parent Asset"
                                                }, {
                                                    "title": "Total Net"
                                                },

                                                {
                                                    "title": "Ext Net"
                                                },

                                                {
                                                    "title": "Total Discount"
                                                }, {
                                                    "title": "Primary MLS Set Id"
                                                },



                                                {
                                                    "title": "Product Email"
                                                },

                                                {
                                                    "title": "Account Id"
                                                }


                                            ],
                                            "order": [
                                                [1, 'asc']
                                            ],



                                            tableTools: {
                                                sRowSelect: "os",
                                                sSwfPath: "{!URLFOR($Resource.TableTools,'TableTools-2.2.4/swf/copy_csv_xls_pdf.swf')}",
                                                aButtons: [{
                                                        sExtends: "collection",
                                                        sButtonText: "Export",
                                                        sButtonClass: "save-collection",
                                                        aButtons: ['copy', 'csv', 'xls', 'pdf']
                                                    },
                                                    'print'
                                                ]
                                            }

                                            ,


                                            "footerCallback": function(row, data, start, end, display) {
                                                    var api = this.api(),
                                                        data;


                                                    if (data.length > 0) {
                                                        // Remove the formatting to get integer data for summation
                                                        var intVal = function(i) {
                                                            return typeof i === 'string' ?
                                                                i.replace(/[\$,]/g, '') * 1 :
                                                                typeof i === 'number' ?
                                                                i : 0;
                                                        };


                                                        for (j = 1; j < 21; j++) {



                                                            // Total over all pages
                                                            total = api
                                                                .column(j)
                                                                .data()
                                                                .reduce(function(a, b) {
                                                                    return intVal(a) + intVal(b);
                                                                });

                                                            // Total over this page
                                                            pageTotal = api
                                                                .column(j, {
                                                                    page: 'current'
                                                                })
                                                                .data()
                                                                .reduce(function(a, b) {
                                                                    return intVal(a) + (intVal(b));
                                                                }, 0);

                                                            // Update footer
                                                            if ((j != 3) && (j != 10)) {

                                                                $(api.column(j).footer()).html(
                                                                    ''
                                                                );

                                                            } else // only calculate for all other Yes columns
                                                            {

                                                                if (j === 10) {
                                                                    $(api.column(j).footer()).html(
                                                                        '( ' + parseFloat('' + pageTotal + '').toFixed(2) + '/' + '' + parseFloat('' + total + '').toFixed(2) + ' )'



                                                                    );


                                                                } else {
                                                                    $(api.column(j).footer()).html(
                                                                        '( ' + pageTotal + '/' + '' + total + ' )'
                                                                    );

                                                                }
                                                            }



                                                        }

                                                    } // end of If data.length

                                                }, // end of footer
                                                "fnInitComplete":function(){
                                                $('#overlay').hide();
                                                }




                                        });


                                    } else if (myFilter === 'BrokerAsset')

                                    {


                                        table = $('#example').DataTable({
                                             "sScrollX": "100%",
                                             "sScrollXInner": "200%",
                                             "bScrollCollapse": true,
                                            "pagingType": "full_numbers",
                                            stateSave: true,
                                            "lengthMenu": [
                                                [10, 25, 50, 100, -1],
                                                [10, 25, 50, 100, "All"]
                                            ],
                                            'iDisplayStart': 25,
                                            "scrollCollapse": false,

                                            colReorder: {
                                                realtime: false
                                            },

                                            "order": [
                                                [1, "desc"]
                                            ],
                                            "dom": 'CRT<"datatables1_filter"f><"top"lp>rt<"bottom"lip><"clear">',


                                            "data": myAssets,

                                            "columns": [{
                                                    "className": 'details-control',
                                                    "orderable": false,
                                                    "defaultContent": '',
                                                    "data": null
                                                }, {
                                                    "title": "Name"
                                                }, {
                                                    "title": "Participants"
                                                }, {
                                                    "title": "Type"
                                                }, {
                                                    "title": "Qty "
                                                }, {
                                                    "title": "Status"
                                                }, {
                                                    "title": "Fulfilment Status"
                                                }, {
                                                    "title": "Market"
                                                }, {
                                                    "title": "Lead Type"
                                                },

                                                {
                                                    "title": "Start Date"
                                                }, {
                                                    "title": "End Date"
                                                }, {
                                                    "title": "Contract Term"
                                                }, {
                                                    "title": "Ultimate Parent"
                                                }, {
                                                    "title": "Account Type"
                                                }, {
                                                    "title": "Parent Asset"
                                                }, {
                                                    "title": "Total Net"
                                                },

                                                {
                                                    "title": "Ext Net"
                                                },

                                                {
                                                    "title": "Total Discount"
                                                }, {
                                                    "title": "Primary MLS Set Id"
                                                },
                                                {
                                                    "title": "Product Email"
                                                },

                                                {
                                                    "title": "Account Id"
                                                }


                                            ],
                                            "order": [
                                                [1, 'asc']
                                            ],



                                            tableTools: {
                                                sRowSelect: "os",
                                                sSwfPath: "{!URLFOR($Resource.TableTools,'TableTools-2.2.4/swf/copy_csv_xls_pdf.swf')}",
                                                aButtons: [{
                                                        sExtends: "collection",
                                                        sButtonText: "Export",
                                                        sButtonClass: "save-collection",
                                                        aButtons: ['copy', 'csv', 'xls', 'pdf']
                                                    },
                                                    'print'
                                                ]
                                            }

                                            ,


                                            "footerCallback": function(row, data, start, end, display) {
                                                    var api = this.api(),
                                                        data;


                                                    if (data.length > 0) {
                                                        // Remove the formatting to get integer data for summation
                                                        var intVal = function(i) {
                                                            return typeof i === 'string' ?
                                                                i.replace(/[\$,]/g, '') * 1 :
                                                                typeof i === 'number' ?
                                                                i : 0;
                                                        };


                                                        for (j = 1; j < 21; j++) {
                                                            // Total over all pages
                                                            total = api
                                                                .column(j)
                                                                .data()
                                                                .reduce(function(a, b) {
                                                                    return intVal(a) + intVal(b);
                                                                });

                                                            // Total over this page
                                                            pageTotal = api
                                                                .column(j, {
                                                                    page: 'current'
                                                                })
                                                                .data()
                                                                .reduce(function(a, b) {
                                                                    return intVal(a) + (intVal(b));
                                                                }, 0);

                                                            // Update footer
                                                            if ((j != 3) && (j != 10)) {

                                                                $(api.column(j).footer()).html(
                                                                    ''
                                                                );

                                                            } else // only calculate for all other Yes columns
                                                            {

                                                                if (j === 10) {
                                                                    $(api.column(j).footer()).html(
                                                                        '( ' + parseFloat('' + pageTotal + '').toFixed(2) + '/' + '' + parseFloat('' + total + '').toFixed(2) + ' )'



                                                                    );


                                                                } else {
                                                                    $(api.column(j).footer()).html(
                                                                        '( ' + pageTotal + '/' + '' + total + ' )'
                                                                    );

                                                                }
                                                            }



                                                        }

                                                    } // end of If data.length

                                                }, // end of footer
                                                "fnInitComplete":function(){
                                                $('#overlay').hide();
                                                }
                                        });


                                    } else if (myFilter === 'Account Listings') {
                                        table = $('#example').DataTable({
                                              "sScrollX": "100%",
                                             "sScrollXInner": "200%",
                                             "bScrollCollapse": true,
                                            "pagingType": "full_numbers",
                                            stateSave: true,
                                            "lengthMenu": [
                                                [10, 25, 50, 100, -1],
                                                [10, 25, 50, 100, "All"]
                                            ],
                                            'iDisplayStart': 25,
                                            "scrollCollapse": false,

                                            colReorder: {
                                                realtime: false
                                            },

                                            "order": [
                                                [1, "desc"]
                                            ],

                                            "dom": 'CRT<"datatables1_filter"f><"top"lp>rt<"bottom"lip><"clear">',

                                            "data": myListings,

                                            "columns": [{
                                                    "className": 'details-control',
                                                    "orderable": false,
                                                    "defaultContent": '',
                                                    "data": null
                                                }, {
                                                    "title": "Name"
                                                }, {
                                                    "title": " Account Type"
                                                }, {
                                                    "title": " Listing Count "
                                                }, {
                                                    "title": " Listing_Type "
                                                }, {
                                                    "title": " Zip"
                                                }, {
                                                    "title": " TL HandRaiser"
                                                }, {
                                                    "title": " TL HomeSearch"
                                                }, {
                                                    "title": " DAP Qty"
                                                }, {
                                                    "title": " CFCB City Fast"
                                                }, {
                                                    "title": " CFCB City Flex"
                                                }, {
                                                    "title": " CFCB City Half Fast"
                                                }, {
                                                    "title": " CFCB City Half Flex"
                                                }, {
                                                    "title": " CFCB Full Fast"
                                                }, {
                                                    "title": " CFCB Full Flex"
                                                }, {
                                                    "title": " CFCB FULL TIER"
                                                }, {
                                                    "title": " CFCB Half Fast"
                                                }, {
                                                    "title": " CFCB Half Flex"
                                                }, {
                                                    "title": " CFCB HALF TIER"
                                                }, {
                                                    "title": " FAC MRec"
                                                }, {
                                                    "title": "Account Id"
                                                }

                                            ],
                                            "order": [
                                                [1, 'asc']
                                            ],



                                            tableTools: {
                                                sRowSelect: "os",
                                                sSwfPath: "{!URLFOR($Resource.TableTools,'TableTools-2.2.4/swf/copy_csv_xls_pdf.swf')}",
                                                aButtons: [{
                                                        sExtends: "collection",
                                                        sButtonText: "Export",
                                                        sButtonClass: "save-collection",
                                                        aButtons: ['copy', 'csv', 'xls', 'pdf']
                                                    },
                                                    'print'
                                                ]
                                            },


                                            "footerCallback": function(row, data, start, end, display) {
                                                    var api = this.api(),
                                                        data;


                                                    if (data.length > 0) {
                                                        // Remove the formatting to get integer data for summation
                                                        var intVal = function(i) {
                                                            return typeof i === 'string' ?
                                                                i.replace(/[\$,]/g, '') * 1 :
                                                                typeof i === 'number' ?
                                                                i : 0;
                                                        };


                                                        for (j = 1; j < 21; j++) {



                                                            // Total over all pages
                                                            total = api
                                                                .column(j)
                                                                .data()
                                                                .reduce(function(a, b) {
                                                                    return intVal(a) + intVal(b);
                                                                });

                                                            // Total over this page
                                                            pageTotal = api
                                                                .column(j, {
                                                                    page: 'current'
                                                                })
                                                                .data()
                                                                .reduce(function(a, b) {
                                                                    return intVal(a) + (intVal(b));
                                                                }, 0);

                                                            // Update footer
                                                            if ((j === 3) || (j >= 6)) {

                                                                $(api.column(j).footer()).html(
                                                                    '( ' + pageTotal + '/' + '' + total + ' )'
                                                                );

                                                            } else // only calculate for all other Yes columns
                                                            {

                                                                $(api.column(j).footer()).html(
                                                                    '');



                                                            }



                                                        }

                                                    } // end of If data.length

                                                }, // end of footer
                                                "fnInitComplete":function(){
                                                $('#overlay').hide();
                                                }
                                        });

                                    } else if (myFilter === 'Payments') {

                                        table = $('#example').DataTable({
                                             "sScrollX": "100%",
                                             "sScrollXInner": "200%",
                                             "bScrollCollapse": true,
                                            "pagingType": "full_numbers",
                                            stateSave: true,
                                            "lengthMenu": [
                                                [10, 25, 50, 100, -1],
                                                [10, 25, 50, 100, "All"]
                                            ],
                                            'iDisplayStart': 25,
                                            "scrollCollapse": false,

                                            colReorder: {
                                                realtime: false
                                            },

                                            "order": [
                                                [1, "desc"]
                                            ],

                                            "dom": 'CRT<"datatables1_filter"f><"top"lp>rt<"bottom"lip><"clear">',

                                            "data": myPayments,

                                            "columns": [{
                                                    "className": 'details-control',
                                                    "orderable": false,
                                                    "defaultContent": '',
                                                    "data": null
                                                }, {
                                                    "title": "Name"
                                                }, {
                                                    "title": "OneTimePayment"
                                                }, {
                                                    "title": "Collections Salesrep"
                                                }, {
                                                    "title": "Amount"
                                                }, {
                                                    "title": "Applied Credit Amount"
                                                }, {
                                                    "title": "Applied Invoice Amount"
                                                }, {
                                                    "title": "Refunded Amount"
                                                }, {
                                                    "title": "Comment"
                                                }, {
                                                    "title": "CreatedDate"
                                                }, {
                                                    "title": "Effective_Date"
                                                }, {
                                                    "title": "Gateway Response Code"
                                                }, {
                                                    "title": "GatewayStatus "
                                                }, {
                                                    "title": "Invoice Number"
                                                }, {
                                                    "title": "Payment Method"
                                                }, {
                                                    "title": "Bank Identification Number"
                                                }, {
                                                    "title": "Status"
                                                }, {
                                                    "title": "Submitted On "
                                                }, {
                                                    "title": "Type"
                                                }, {
                                                    "title": "Updated Date"
                                                }, {
                                                    "title": "Account Id"
                                                }


                                            ],
                                            "order": [
                                                [1, 'asc']
                                            ],



                                            tableTools: {
                                                sRowSelect: "os",
                                                sSwfPath: "{!URLFOR($Resource.TableTools,'TableTools-2.2.4/swf/copy_csv_xls_pdf.swf')}",
                                                aButtons: [{
                                                        sExtends: "collection",
                                                        sButtonText: "Export",
                                                        sButtonClass: "save-collection",
                                                        aButtons: ['copy', 'csv', 'xls', 'pdf']
                                                    },
                                                    'print'
                                                ]
                                            }

                                            ,


                                            "footerCallback": function(row, data, start, end, display) {
                                                    var api = this.api(),
                                                        data;


                                                    if (data.length > 0) {
                                                        // Remove the formatting to get integer data for summation
                                                        var intVal = function(i) {
                                                            return typeof i === 'string' ?
                                                                i.replace(/[\$,]/g, '') * 1 :
                                                                typeof i === 'number' ?
                                                                i : 0;
                                                        };


                                                        for (j = 1; j < 21; j++) {
                                                            // Total over all pages
                                                            total = api
                                                                .column(j)
                                                                .data()
                                                                .reduce(function(a, b) {
                                                                    return intVal(a) + intVal(b);
                                                                });

                                                            // Total over this page
                                                            pageTotal = api
                                                                .column(j, {
                                                                    page: 'current'
                                                                })
                                                                .data()
                                                                .reduce(function(a, b) {
                                                                    return intVal(a) + (intVal(b));
                                                                }, 0);

                                                            // Update footer
                                                            if ((j > 3) && (j <= 7)) {

                                                                $(api.column(j).footer()).html(
                                                                    '( ' + parseFloat('' + pageTotal + '').toFixed(2) + '/' + '' + parseFloat('' + total + '').toFixed(2) + ' )'
                                                                );
                                                            } else // only calculate for all other Yes columns
                                                            {
                                                                $(api.column(j).footer()).html('');

                                                            }

                                                        }

                                                    } // end of If data.length

                                                }, // end of footer
                                                "fnInitComplete":function(){
                                                $('#overlay').hide();
                                                }
                                        });

                                    } else if (myFilter === 'Case') {
                                        table = $('#example').DataTable({
                                             "sScrollX": "100%",
                                             "sScrollXInner": "200%",
                                             "bScrollCollapse": true,
                                            "pagingType": "full_numbers",
                                            stateSave: true,
                                            "lengthMenu": [
                                                [10, 25, 50, 100, -1],
                                                [10, 25, 50, 100, "All"]
                                            ],
                                            'iDisplayStart': 25,
                                            "scrollCollapse": false,

                                            colReorder: {
                                                realtime: false
                                            },

                                            "order": [
                                                [1, "desc"]
                                            ],

                                            "dom": 'CRT<"datatables1_filter"f><"top"lp>rt<"bottom"lip><"clear">',

                                            "data": myCase,

                                            "columns": [{
                                                    "className": 'details-control',
                                                    "orderable": false,
                                                    "defaultContent": '',
                                                    "data": null
                                                }, {
                                                    "title": "Case Number"
                                                }, {
                                                    "title": "Subject"
                                                }, {
                                                    "title": "Status"
                                                }, {
                                                    "title": "SubStatus"
                                                }, {
                                                    "title": "Area"
                                                }, {
                                                    "title": "Sub_Area"
                                                }, {
                                                    "title": "Type"
                                                }, {
                                                    "title": "Time Zone"
                                                }, {
                                                    "title": "Priority"
                                                }, {
                                                    "title": "First Name"
                                                }, {
                                                    "title": "Last Name"
                                                }, {
                                                    "title": "Owner"
                                                }, {
                                                    "title": "Account Name"
                                                }, {
                                                    "title": "Account Type"
                                                }, {
                                                    "title": "CreatedDate"
                                                }, {
                                                    "title": "Total Contract Value"
                                                }, {
                                                    "title": "Case_Priority"
                                                }, {
                                                    "title": "SLA_Achieved"
                                                }, {
                                                    "title": "MLS Set Id"
                                                }, {
                                                    "title": "Account Id"
                                                }


                                            ],
                                            "order": [
                                                [1, 'asc']
                                            ],



                                            tableTools: {
                                                sRowSelect: "os",
                                                sSwfPath: "{!URLFOR($Resource.TableTools,'TableTools-2.2.4/swf/copy_csv_xls_pdf.swf')}",
                                                aButtons: [{
                                                        sExtends: "collection",
                                                        sButtonText: "Export",
                                                        sButtonClass: "save-collection",
                                                        aButtons: ['copy', 'csv', 'xls', 'pdf']
                                                    },
                                                    'print'
                                                ]
                                            }


                                            ,


                                            "footerCallback": function(row, data, start, end, display) {
                                                    var api = this.api(),
                                                        data;


                                                    if (data.length > 0) {
                                                        // Remove the formatting to get integer data for summation
                                                        var intVal = function(i) {
                                                            return typeof i === 'string' ?
                                                                i.replace(/[\$,]/g, '') * 1 :
                                                                typeof i === 'number' ?
                                                                i : 0;
                                                        };


                                                        for (j = 1; j < 21; j++) {



                                                            // Total over all pages
                                                            total = api
                                                                .column(j)
                                                                .data()
                                                                .reduce(function(a, b) {
                                                                    return intVal(a) + intVal(b);
                                                                });

                                                            // Total over this page
                                                            pageTotal = api
                                                                .column(j, {
                                                                    page: 'current'
                                                                })
                                                                .data()
                                                                .reduce(function(a, b) {
                                                                    return intVal(a) + (intVal(b));
                                                                }, 0);

                                                            // Update footer
                                                            if (j >= 1) {


                                                                $(api.column(j).footer()).html('');

                                                            }



                                                        }

                                                    } // end of If data.length

                                                }, // end of footer
                                                "fnInitComplete":function(){
                                                $('#overlay').hide();
                                                }

                                        });

                                    } else if (myFilter === 'Lead') {
                                        
                                        table = $('#example').DataTable({
                                             "sScrollX": "100%",
                                             "sScrollXInner": "200%",
                                             "bScrollCollapse": true,
                                            "pagingType": "full_numbers",
                                            stateSave: true,
                                            "lengthMenu": [
                                                [10, 25, 50, 100, -1],
                                                [10, 25, 50, 100, "All"]
                                            ],
                                            'iDisplayStart': 25,
                                            "scrollCollapse": false,

                                            colReorder: {
                                                realtime: false
                                            },

                                            "order": [
                                                [1, "desc"]
                                            ],

                                            "dom": 'CRT<"datatables1_filter"f><"top"lp>rt<"bottom"lip><"clear">',

                                            "data": myLead,

                                            "columns": [{
                                                    "className": 'details-control',
                                                    "orderable": false,
                                                    "defaultContent": '',
                                                    "data": null
                                                }, {
                                                    "title": "Name"
                                                }, {
                                                    "title": "Phone"
                                                }, {
                                                    "title": "Company"
                                                }, {
                                                    "title": "Available Inventory"
                                                }, {
                                                    "title": "Full Flex Available"
                                                }, {
                                                    "title": "Half Fast Available"
                                                }, {
                                                    "title": "Half_Fast PreSales Available"
                                                }, {
                                                    "title": "Half Flex Available"
                                                }, {
                                                    "title": "Half Flex PreSales Available"
                                                }, {
                                                    "title": "Available Fast"
                                                }, {
                                                    "title": "Available PreSalesFast"
                                                }, {
                                                    "title": "Available PreSalesFlex"
                                                }, {
                                                    "title": "Interested in CBC"
                                                }, {
                                                    "title": "Interested in_FS"
                                                }, {
                                                    "title": "Interested in TL"
                                                }, {
                                                    "title": "Interested in TP_CRM"
                                                }, {
                                                    "title": "Status"
                                                }, {
                                                    "title": "Lead Age"
                                                }, {
                                                    "title": "Lead Score"
                                                }, {
                                                    "title": "Account Id"
                                                }


                                            ],
                                            "order": [
                                                [1, 'asc']
                                            ],



                                            tableTools: {
                                                sRowSelect: "os",
                                                sSwfPath: "{!URLFOR($Resource.TableTools,'TableTools-2.2.4/swf/copy_csv_xls_pdf.swf')}",
                                                aButtons: [{
                                                        sExtends: "collection",
                                                        sButtonText: "Export",
                                                        sButtonClass: "save-collection",
                                                        aButtons: ['copy', 'csv', 'xls', 'pdf']
                                                    },
                                                    'print'
                                                ]
                                            },

                                            "footerCallback": function(row, data, start, end, display) {

                                                var api = this.api(),
                                                    data;

                                                if (data.length > 0) {

                                                    // Remove the formatting to get integer data for summation
                                                    var intVal = function(i) {
                                                        return typeof i === 'string' ?
                                                            i.replace(/[\$,]/g, '') * 1 :
                                                            typeof i === 'number' ?
                                                            i : 0;
                                                    };


                                                    for (j = 1; j < 20; j++) {

                                                        // Total over all pages
                                                        total = api
                                                            .column(j)
                                                            .data()
                                                            .reduce(function(a, b) {
                                                                return intVal((a === 'Yes' ? 1 : 0 || a > 0 ? a : 0)) + intVal((b === 'Yes' ? 1 : 0 || b > 0 ? a : 0));
                                                            });

                                                        // Update footer
                                                        if (j > 4 || j < 17) {

                                                            $(api.column(j).footer()).html(
                                                                '( ' + total + ' )'
                                                            );

                                                        } else {
                                                            $(api.column(j).footer()).html(
                                                                ''
                                                            );
                                                        }

                                                    }

                                                } // data.length > 0
                                            }

                                            ,


                                            "createdRow": function(row, data, dataIndex) {

                                                for (k = 1; k < 20; k++) {

                                                    if (data[k] === 'Yes') {

                                                        $('td', row).eq(k).css({
                                                            'color': 'blue'
                                                        });
                                                        $('td', row).eq(k).css({
                                                            'background-color': 'yellow'
                                                        });


                                                    }

                                                }

                                            }, // end of footer
                                                "fnInitComplete":function(){
                                                $('#overlay').hide();
                                                }

                                        });

                                    } else if (myFilter === 'Subscriptions') {
                                        table = $('#example').DataTable({
                                             "sScrollX": "100%",
                                             "sScrollXInner": "200%",
                                             "bScrollCollapse": true,
                                            "pagingType": "full_numbers",
                                            stateSave: true,
                                            "lengthMenu": [
                                                [10, 25, 50, 100, -1],
                                                [10, 25, 50, 100, "All"]
                                            ],
                                            'iDisplayStart': 25,
                                            "scrollCollapse": false,

                                            colReorder: {
                                                realtime: false
                                            },

                                            "order": [
                                                [1, "desc"]
                                            ],

                                            "dom": 'CRT<"datatables1_filter"f><"top"lp>rt<"bottom"lip><"clear">',

                                            "data": mySubscriptions,

                                            "columns": [{
                                                    "className": 'details-control',
                                                    "orderable": false,
                                                    "defaultContent": '',
                                                    "data": null
                                                }, {
                                                    "title": "Name"
                                                }, {
                                                    "title": "Status"
                                                }, {
                                                    "title": "TCV"
                                                }, {
                                                    "title": "MRR"
                                                }, {
                                                    "title": "Subscription End Date"
                                                }, {
                                                    "title": "Subscription Start Date"
                                                }, {
                                                    "title": "Activation Date"
                                                }, {
                                                    "title": "Initial Term"
                                                }, {
                                                    "title": "Renewal Term"
                                                }, {
                                                    "title": "Term End Date"
                                                }, {
                                                    "title": "Next Renewal Date"
                                                }, {
                                                    "title": "Next Charge Date"
                                                }, {
                                                    "title": "Notes"
                                                }, {
                                                    "title": "Term Setting"
                                                }, {
                                                    "title": "Term Start Date"
                                                }, {
                                                    "title": "Created Date"
                                                }, {
                                                    "title": "Auto Renew"
                                                }, {
                                                    "title": "Contract Acceptance Date"
                                                }, {
                                                    "title": "Contract Effective Date"
                                                }, {
                                                    "title": "Account Id"
                                                }


                                            ],
                                            "order": [
                                                [1, 'asc']
                                            ],



                                            tableTools: {
                                                sRowSelect: "os",
                                                sSwfPath: "{!URLFOR($Resource.TableTools,'TableTools-2.2.4/swf/copy_csv_xls_pdf.swf')}",
                                                aButtons: [{
                                                        sExtends: "collection",
                                                        sButtonText: "Export",
                                                        sButtonClass: "save-collection",
                                                        aButtons: ['copy', 'csv', 'xls', 'pdf']
                                                    },
                                                    'print'
                                                ]
                                            },

                                            "footerCallback": function(row, data, start, end, display) {
                                                    var api = this.api(),
                                                        data;


                                                    if (data.length > 0) {
                                                        // Remove the formatting to get integer data for summation
                                                        var intVal = function(i) {
                                                            return typeof i === 'string' ?
                                                                i.replace(/[\$,]/g, '') * 1 :
                                                                typeof i === 'number' ?
                                                                i : 0;
                                                        };


                                                        for (j = 1; j < 21; j++) {

                                                            // Total over all pages
                                                            total = api
                                                                .column(j)
                                                                .data()
                                                                .reduce(function(a, b) {
                                                                    return intVal(a) + intVal(b);
                                                                });

                                                            // Total over this page
                                                            pageTotal = api
                                                                .column(j, {
                                                                    page: 'current'
                                                                })
                                                                .data()
                                                                .reduce(function(a, b) {
                                                                    return intVal(a) + (intVal(b));
                                                                }, 0);

                                                            // Update footer
                                                            if ((j >= 3) && (j <= 4)) {

                                                                $(api.column(j).footer()).html(
                                                                    '( ' + parseFloat('' + pageTotal + '').toFixed(2) + '/' + '' + parseFloat('' + total + '').toFixed(2) + ' )'



                                                                );


                                                            } else // only calculate for all other Yes columns
                                                            {

                                                                $(api.column(j).footer()).html('');


                                                            }

                                                        }

                                                    } // end of If data.length

                                                }, // end of footer
                                                "fnInitComplete":function(){
                                                $('#overlay').hide();
                                                }

                                        });


                                    } else if (myFilter === 'Agent View') {
                                  
     
                                    
                                        table = $('#example').DataTable({
                                             "sScrollX": "100%",
                                             "sScrollXInner": "200%",
                                             "bScrollCollapse": true,
                                            "pagingType": "full_numbers",
                                            stateSave: true,
                                            "lengthMenu": [
                                                [10, 25, 50, 100, -1],
                                                [10, 25, 50, 100, "All"]
                                            ],
                                            'iDisplayStart': 25,
                                            "scrollCollapse": false,

                                            colReorder: {
                                                realtime: false
                                            },

                                            "order": [
                                                [1, "desc"]
                                            ],

                                            "dom": 'CRT<"datatables1_filter"f><"top"lp>rt<"bottom"lip><"clear">',
                                            "data": myAgentView,

                                            "columns": [{
                                                    "className": 'details-control',
                                                    "orderable": false,
                                                    "defaultContent": '',
                                                    "data": null
                                                },


                                                {
                                                    "title": "Child Name"
                                                }, {
                                                    "title": "Child Type "
                                                }, {
                                                    "title": "Child Primary MLS Set",
                                                    "className": 'number'
                                                }, {
                                                    "title": "Child Preffered Phone",
                                                    "className": 'number'
                                                }, {
                                                    "title": "Child Total Offices",
                                                    "className": 'number'
                                                }, {
                                                    "title": "Child Total Agents ",
                                                    "className": 'number'
                                                }, {
                                                    "title": "Child Total HLC",
                                                    "className": 'number'
                                                }, {
                                                    "title": "Child Total CLC  ",
                                                    "className": 'number'
                                                }, {
                                                    "title": "$ Child TCV"
                                                }, {
                                                    "title": "Child Franchise Type"
                                                }, {
                                                    "title": "Child Sub Type "
                                                }, {
                                                    "title": "Child Owner "
                                                }, {
                                                    "title": "Relationship Type"
                                                },

                                                {
                                                    "title": "Parent Name"
                                                }, {
                                                    "title": "Parent Type"
                                                }, {
                                                    "title": "Parent HLC",
                                                    "className": 'number'
                                                }, {
                                                    "title": "Parent CLC  ",
                                                    "className": 'number'
                                                }, {
                                                    "title": "Parent Total Offices",
                                                    "className": 'number'
                                                }, {
                                                    "title": "Parent Total Agents",
                                                    "className": 'number'
                                                },


                                                {
                                                    "title": "Child Account Id"
                                                }

                                            ],
                                            "order": [
                                                [1, 'asc']
                                            ],



                                            tableTools: {
                                                sRowSelect: "os",
                                                sSwfPath: "{!URLFOR($Resource.TableTools,'TableTools-2.2.4/swf/copy_csv_xls_pdf.swf')}",
                                                aButtons: [{
                                                        sExtends: "collection",
                                                        sButtonText: "Export",
                                                        sButtonClass: "save-collection",
                                                        aButtons: ['copy', 'csv', 'xls', 'pdf']
                                                    },
                                                    'print'
                                                ]
                                            },

                                            "footerCallback": function(row, data, start, end, display) {
                                                    var api = this.api(),
                                                        data;


                                                    if (data.length > 0) {
                                                        // Remove the formatting to get integer data for summation
                                                        var intVal = function(i) {
                                                            return typeof i === 'string' ?
                                                                i.replace(/[\$,]/g, '') * 1 :
                                                                typeof i === 'number' ?
                                                                i : 0;
                                                        };


                                                        for (j = 1; j < 21; j++) {



                                                            // Total over all pages
                                                            total = api
                                                                .column(j)
                                                                .data()
                                                                .reduce(function(a, b) {
                                                                    return intVal(a) + intVal(b);
                                                                });

                                                            // Total over this page
                                                            pageTotal = api
                                                                .column(j, {
                                                                    page: 'current'
                                                                })
                                                                .data()
                                                                .reduce(function(a, b) {
                                                                    return intVal(a) + (intVal(b));
                                                                }, 0);

                                                            // Update footer
                                                            if ((j >= 6) && (j <= 10)) {

                                                                $(api.column(j).footer()).html(
                                                                    '( ' + parseFloat('' + pageTotal + '').toFixed(2) + '/' + '' + parseFloat('' + total + '').toFixed(2) + ' )'



                                                                );


                                                            } else // only calculate for all other Yes columns
                                                            {

                                                                $(api.column(j).footer()).html('');



                                                            }



                                                        }

                                                    } // end of If data.length

                                                }, // end of footer 
                                                "fnInitComplete":function(){
                                                $('#overlay').hide();
                                                }

                                        });
                          

                                    }
                 
                               
                                });
                          

                                        if(exportHide==-1)
                                        {
                                        $('.DTTT_container').hide();
                                         
                                        }
                            }); // client.query end moved it here 

                        } // new for loop end for mstart 
           
                    $('#example_wrapper').show();
                    } // end of If statement for Off Array lenght and other checks 
                }
            } catch (e) {
                        $('#overlay').hide();
                             if (checkfornull(table) === false) {
                              
                              $('#example_wrapper').hide();
                             }
                console.log(e);
            }


        } // end of load datatable


        // Add event listener for opening and closing details(function is not working)
        $('#example tbody').on('click', 'td.details-control', function() {
            var tr = $(this).closest('tr');
            var row = table.row(tr);
            //console.log(row +'row.child.isShown()' + row.child.isShown());
            if (row.child.isShown()) {
                // This row is already open - close it
                row.child.hide();
                tr.removeClass('shown');

            } else {
                // Open this row\\

                var mytable = format(row.data(), GlobalSelectedNodeId, row);

            }
        });

        window.onload = function() {

                var a = document.getElementById("mylink");

                //Set code to run when the link is clicked
                // by assigning a function to "onclick"
                a.onclick = function() {
                    if ((bPartialLoad === true) && (NoofRows > BatchSize))

                    {

                        var tempjson = myjsoninside;

                        var partialjson = JSON.parse(tempjson);

                        $("#jstree").jstree("destroy");
                        loadtree(partialjson);
 



                    }

                    //If you don't want the link to actually 
                    // redirect the browser to another page,
                    // "google.com" in our example here, then
                    // return false at the end of this block.
                    // Note that this also prevents event bubbling,
                    // which is probably what we want here, but won't 
                    // always be the case.


                    return false;
                }

            }


        function JSON2CSV(objArray) {
            var array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;

            var str = '';
            var line = '';

            if ($("#labels").is(':checked')) {
                var head = array[0];
                if ($("#quote").is(':checked')) {


                    for (var index in array[0]) {

                        if (index === 'data') {

                            jQuery.each(array[0][index], function(index1, subval) {
                                var value = index1 + "";
                            });

                        } else {

                            var value = index + "";
                        }
                    }
                } else {
                    for (var index in array[0]) {
                        line += index + ',';
                    }
                }

                line = line.slice(0, -1);
                str += line + '\r\n';
                str = '"ID","Name","$TCV","$Agent Spend","HLC","#Offices","#Agents","CLC","Type","Phone","Primary MLS","RelationShip","Franchise","SubType" ' + '\r\n';
            }

            for (var i = 0; i < array.length; i++) {
                var line = '';

                if ($("#quote").is(':checked')) {

                    for (var index in array[i]) {


                        if (index === 'data') {

                            jQuery.each(array[i][index], function(index1, subval) {
                                if ((index1 == 'owner') || (index1 == 'primaryhlc'))
                                    return;
                                var value = subval + "";
                                line += '"' + value.replace(/"/g, '""') + '",';

                            });

                        } else if (index === 'id') {

                            line += '"' + array[i].id.replace(/"/g, '""') + '",';
                        } else if (index === 'text') {

                            line += '"' + array[i].text.replace(/"/g, '""') + '",';
                        } else {
                            var value = array[i][index] + "";

                        }


                    }
                } else {


                }

                line = line.slice(0, -1);
                str += line + '\r\n';
            }

            return str;

        }

        $("#convert").click(function() {
            var json = $.parseJSON(myjsoninside);
            var csv = JSON2CSV(json);
            $("#csv").val(csv);
            nWin();
        });

        $("#download").click(function() {
            var json = $('#jstree').jstree(true).get_json('#', {
                    flat: true
                })
            var csv = JSON2CSV(json);

            var uri = 'data:text/csv;charset=utf-8,' + escape(csv);
            var link = document.createElement("a");
            link.href = uri;
            link.style = "visibility:hidden";
            link.download = "Myfile" + ".csv";
            document.body.appendChild(link);

            link.click();
            document.body.removeChild(link);
        });

        function nWin() {
            var w = window.open();
            var html = $("#csv").html();

            $(w.document.body).html(html);
        }

        function checkduplicate(myid, myparentid, mystring) {
            if (checkfornull(mystring) === true) {
                mystring === "Child";

            }

            if (myid === myparentid) {
                return 1;

            }

            if (myid === '001Z000000ySBsHIAW' || myid === '001Z000000yUXDKIA4' || myid === '001Z000000ySscwIAC') {
                return 2;
            }

            if ((checkfornull(myid) === false) && (checkfornull(myparentid) === false) && checkfornull(myDupArray) === false)


            {
                var dupcntr = 0;
                for (var i = 0, n = myDupArray.length; i < n; i++) {

                    if (((myparentid + myid) === myDupArray[i]) && (mystring === "Child")) {
                        return 1;
                    }

                    if ((myDupArray[i].search(myparentid) === 0) && (mystring === "Parent")) {
                        return 1;
                    }

                    if ((myDupArray[i].search(myid) >= 0) && (mystring === "Child")) {
                        dupcntr = dupcntr + 1;

                        if (dupcntr > 1) {
                            return dupcntr;
                        }

                    }


                }

            }
            return 0;

        }


        function checkduplicate1(myid, myparentid, mystring) {

            if (checkfornull(mystring) === true) {
                mystring === "Child";

            }

            if (myid === myparentid) {
                return 1;

            }

            if ((checkfornull(myid) === false) && (checkfornull(myparentid) === false) && checkfornull(myDupArray) === false)


            {
                var dupcntr = 0;

                if ((myDupArray.indexOf(myparentid + myid) != -1) && (mystring === "Child")) {
                    return 1;
                }

                if ((myDupArray.indexOf(myparentid) != -1) && (mystring === "Parent")) {
                    return 1;
                }

            }

            return 0;
        }



        var count=0; 
        function calculate_agent_spend(x) {
            if (count > 0)
                return;
            count++;
            var json1 = $.parseJSON(x);
           
            var parentid;
            var myobj;
            var duplicateRemover = [];
            var currenParent = null;

            for (var i = 0, n = json1.length; i < n; i++) {
                jQuery.each(json1[i], function(j, val) {
                    var realterName = val.id;
                    parentid = val.id;
                    if (val.parent == '#') {

                    } else if (parentid != val.parent) {
                        if (val.data.reltype.trim() == "Realtor Agent") {
                              
                               if (val.data.tas != 0) {
                                var node = $("#jstree").jstree(true).get_node(val.parent);
                                
                                if (node.data) {
                                    node.data.tas = Number(val.data.tas) + Number(node.data.tas);
                                    $("#jstree").trigger("change_node.jstree", node);
                                    var node1 = $("#jstree").jstree(true).get_node(node.parent);

                                    if (node1.data) {
                                        node1.data.tas = Number(node1.data.tas) + Number(val.data.tas);
                                        $("#jstree").trigger("change_node.jstree", node1);
                                        var node2 = $("#jstree").jstree(true).get_node(node1.parent);
                                        if (node2.data && node2.id) {
                                            console.log(node2.data);
                                            node2.data.tas = Number(node2.data.tas) + Number(node1.data.tas);
                                            $("#jstree").trigger("change_node.jstree", node2);
                                        }

                                    }
                                }

                            }
                        }
                    }
                });
            }

        }

        function SetData(mystring) {
            var myvalue;
            myvalue = (mystring === true ? "Yes" : "N");
            return myvalue;

        }

        /**
         *  Format phone numbers
         */
        function formatPhone(phonenum) {
            var regexObj = /^(?:\+?1[-. ]?)?(?:\(?([0-9]{3})\)?[-. ]?)?([0-9]{3})[-. ]?([0-9]{4})$/;
            if (regexObj.test(phonenum)) {
                var parts = phonenum.match(regexObj);
                var phone = "";
                if (parts[1]) {
                    phone += "+1 (" + parts[1] + ") ";
                }
                phone += parts[2] + "-" + parts[3];
                phone = phone.replace("+1", "");
                return phone;
            } else {
                return phonenum;
            }
        }


        function createQuoteJS() {

            try {

                var mUser = 'arunsharma';
                var password = 'CPQ123';
                var mSFDCAccountId = '001g000000aXEen';
                var oppId = '006g0000007cRgg';
                var caseId;
                var returnCPQ = true;
                var assetid;
                var tmpQuoteItems = new Array();
                var quoutefullurl;
                var QuoteTransactionId;
                if (mUser === null) {

                    mUser = 'arunsharma';
                    password = 'CPQ123';

                }
                var oTT = TableTools.fnGetInstance('example');
                var aData = oTT.fnGetSelectedData();
                var arrayLength = aData.length;

                for (var i = 0; i < arrayLength; i++) {
                    var Obj = new Object();

                    for (var prop in aData[i]) {

                        if ((prop === 'market') || (prop === 'party_id') || (prop === 'leadtype') ||
                            (prop === 'qty') || (prop === 'slotsize') || (prop === 'leadroutingtype') || (prop === 'sfdcid') || (prop === 'product')) {

                            if (prop == 'market') {
                                Obj['market'] = aData[i][prop];
                            } else {
                                if (prop === 'slotsize') {
                                    var str = aData[i]['slotsize']; // check regular expression for word Fast 
                                    var n = str.search(/Half/i);

                                    if ((aData[i]['slotsize'] === 'Any') || (aData[i]['product'] != 'CBC') || (n === -1)) {
                                        Obj[prop] = 'Full';
                                    } else {
                                        Obj[prop] = 'Half';
                                    }



                                } else if (prop === 'leadtype') {
                                    var str = aData[i]['leadtype']; // check regular expression for word Fast 
                                    var n = str.search(/Fast/i);
                                    if ((aData[i]['leadroutingtype'] === 'Any') || (aData[i]['product'] != 'CBC') || (n === -1)) {
                                        Obj[prop] = 'Flex';

                                    } else {
                                        Obj[prop] = 'Fast';
                                    }

                                } else {
                                    Obj[prop] = aData[i][prop];
                                }


                            }

                        } // end of If 


                    } // end of Inner For Loop 

                    Obj.username = mUser;
                    Obj.password = password;

                    Obj.OpportunityId = oppId;
                    Obj.CaseId = caseId;

                    Obj.sfdcid = '{!Account.Id}';

                    tmpQuoteItems.push(Obj); // Add Object to the Array

                } // end of outer for loop 

                var delay = 0000; //2 seconds
                setTimeout(function() {
                }, delay);
            } catch (e) {

            }

            return true;
        }

        function OpenMyRecord() {

            if (GlobalSelectedFilter === 'MLS' || GlobalSelectedFilter === 'Products') {
                window.open("/" + GlobalSelectedNodeId, '_blank');

            } else {
                var assetid;

                var oTT = TableTools.fnGetInstance('example');

                var aData = oTT.fnGetSelectedData();

                var arrayLength = aData.length;

                for (var i = 0; i < 1; i++) {
  
                    for (var prop in aData[i]) {
                        if ((prop === 'Id') || (aData[i][15] != null)) {

                            window.open("/" + aData[i][15], '_blank');
                            return true;

                        }

                    }

                }


            }

            return true;

        }

        $('#mlsactive').change(
            function() {
           
                loadDataTable(GlobalSelectedNodeId, GlobalSelectedText, GlobalSelectedFilter, GlobalSelectedType, 'MLSActive');

            });

        $('#chkLoadAll').change(
            function() {
                TreeReload();
            });


        function TreeReload() {
            myjson = "";
            myjsoncomplete = false;
            myjsoninside = '{ "id" : "01", "parent" : "#", "text" : "Account Tree" }';
            bFirstNode = true;
            myjsonthreadstarted = 0;
            myjsonthreadcompleted = 0;
            MLS = [];
            NoofRows = 0;
            bPartialLoad = false;
            mypartialjson = "";
            BatchSize = 1500; // size of the Tree Batch
            GlobalSelectedNodeId = "";
            GlobalSelectedText = "";
            GlobalSelectedFilter = "MLS";
            GlobalSelectedType = "Realtor Office";
            myDupArray = [];
            mlsactive = true;
            mAccType = "{!Account.Type}";

            if ($("#chkLoadAll").is(':checked')) {
                chkLoadAll = true;

            } else {
                chkLoadAll = false;
            }


            if ((AccountId != null) || (AccountId != '')) {

                $("#jstree").jstree("destroy");

                AccountId = '{!Account.Id}';

                if (AccountId.length > 10) {

                    if ((mAccType === 'Realtor Agent' || mAccType === 'Realtor Office') && chkLoadAll === false) {

                        if (mAccType === 'Realtor Agent') {
                            AccountId = getRootId(AccountId, 7);
                        } else {
                            firstNodeLoad(AccountId);
                        }

                    } else {
                        AccountId = getRootId(AccountId, 0);
                    }
                }

            }

        }

        function OpenAccount() {
            var url;
            var msfdcid;

            var oTT = TableTools.fnGetInstance('example');
            var aData = oTT.fnGetSelectedData();

            var arrayLength = aData.length;

            for (var i = 0; i < 1; i++) {

                for (var prop in aData[i]) {
                    if ((aData[i][20] != null)) {
                        msfdcid = aData[i][20];
                    }

                }

            }

            if (checkfornull(msfdcid) === true) {
                msfdcid = GlobalSelectedNodeId;
            }

            var pos = msfdcid.indexOf("_");
            if (pos > -1) {
                try {
                    msfdcid = msfdcid.substring(0, pos - 1);
                } catch (e) {
                }

            }

            url = '/' + msfdcid;
            //CRM-5761
            if(sforce.console.isInConsole()){
                sforce.console.openPrimaryTab(null, url,true);
            } else {
                window.open(url, '_blank');
            }

            return false;
        }

    </script>

</apex:page>