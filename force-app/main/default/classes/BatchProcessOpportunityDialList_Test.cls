@isTest
private class BatchProcessOpportunityDialList_Test{
    static testMethod void method1()
    {
        //Inserting Customsetting for Account 
        DisabledTrigger__c Dtrg = new DisabledTrigger__c(Name= 'Disabled',TaskTrigger__c = 'Test@test.com',AssetTrigger__c = 'Test@test.com');
        insert Dtrg;       
        Robin_Round__c rb = new Robin_Round__c(Name = 'MaxCount',Default_Size__c = 50);
        insert rb;      
        Lead_Custom_Setting__c lcs = new Lead_Custom_Setting__c(Name='LeadSetting',Lead__c='Event,Webinar,RDC Webinar,Un Specified');
        insert lcs;
        Lead_Batch_Schedule__c lbs = new Lead_Batch_Schedule__c(Name='LeadRoutingBatchSchedule',Value__c='No');
        insert lbs;
        Account theAccount1 = TestDataFactory.createAccount('The Test Account', null, false);
        theAccount1.Primary_Email__c = 'theAccount@move.com';  
        theAccount1.Type= 'Realtor Agent';  
        insert theAccount1;   
        Product2 newProduct = new Product2();
        newProduct.Name = 'TestProduct';
        newProduct.Commission_Category__c = 'Normal';    
        newProduct.Normalization_factor__c = 1.10;
        newProduct.Commission_Category__c = 'CFCB';
        newProduct.Fulfillment_Type__c = 'Manual';
        newProduct.Auto_Renewal__c = True;
        newProduct.ProductCode='ADVANTAGE' ;
        newProduct.Orderable__c= true;
        newProduct.S_No__c = 2;
        newProduct.Beta__c = false;
        newProduct.AR_Max_Discount_Threshold__c = 90;
        insert newProduct;
         Product2 newProduct2 = new Product2();
        newProduct2.Name = 'TestProduct';
        newProduct2.Commission_Category__c = 'Normal';    
        newProduct2.Normalization_factor__c = 1.10;
        newProduct2.Commission_Category__c = 'CFCB';
        newProduct2.Fulfillment_Type__c = 'Manual';
        newProduct2.Auto_Renewal__c = True;
        newProduct2.ProductCode='COBROKE' ;
        newProduct2.Orderable__c= true;
        newProduct2.S_No__c = 2;
        newProduct2.Beta__c = false;
        newProduct2.AR_Max_Discount_Threshold__c = 90;
        insert newProduct2;
         Product2 newProduct3 = new Product2();
        newProduct3.Name = 'TestProduct';
        newProduct3.Commission_Category__c = 'Normal';    
        newProduct3.Normalization_factor__c = 1.10;
        newProduct3.Commission_Category__c = 'CFCB';
        newProduct.Fulfillment_Type__c = 'Manual';
        newProduct3.Auto_Renewal__c = True;
        newProduct3.ProductCode='LOCALEXPERT' ;
        newProduct3.Orderable__c= true;
        newProduct3.S_No__c = 2;
        newProduct3.Beta__c = false;
        newProduct3.AR_Max_Discount_Threshold__c = 90;
        insert newProduct3;
        Asset assets = new Asset();
            assets.Name = 'test';
            assets.Renewal_Status__c = '';
            assets.Auto_Renewal__c = 'No';
            assets.Asset_Type__c = 'Parent';
            assets.AccountId = theAccount1.id;
            assets.Fulfillment_Status__c = 'Fulfilled';
            assets.Status = 'Active';
            assets.Line_Type__c = 'Add';
            assets.Billing_Period__c = 'Monthly';
            assets.Start_Date__c = system.today();
            assets.End_Date__c = System.today();//.addDays(5);
            assets.Product2Id = newProduct.id;
            assets.Haircut_Asset__c = false;
            assets.Inflight_Quote__c = null;
            assets.Last_Order_Activity_Date__c = null;
            assets.List_Price__c = 60;
            assets.Total_Net__c = 50;
            assets.Total_List_Price__c = 30;            
            insert assets;
        Asset assets2 = new Asset();
            assets2.Name = 'test';
            assets2.Renewal_Status__c = '';
            assets2.Auto_Renewal__c = 'No';
            assets2.Asset_Type__c = 'Parent';
            assets2.AccountId = theAccount1.id;
            assets2.Fulfillment_Status__c = 'Fulfilled';
            assets2.Status = 'Active';
            assets2.Line_Type__c = 'Add';
            assets2.Billing_Period__c = 'Monthly';
            assets2.Start_Date__c = system.today();
            assets2.End_Date__c = System.today();//.addDays(5);
            assets2.Product2Id = newProduct2.id;
            assets2.Haircut_Asset__c = false;
            assets2.Inflight_Quote__c = null;
            assets2.Last_Order_Activity_Date__c = null;
            assets2.List_Price__c = 60;
            assets.Total_Net__c = 50;
            assets.Total_List_Price__c = 30;            
            insert assets2;
        Asset assets3 = new Asset();
            assets3.Name = 'test';
            assets3.Renewal_Status__c = '';
            assets3.Auto_Renewal__c = 'No';
            assets3.Asset_Type__c = 'Parent';
            assets3.AccountId = theAccount1.id;
            assets3.Fulfillment_Status__c = 'Fulfilled';
            assets3.Status = 'Active';
            assets3.Line_Type__c = 'Add';
            assets3.Billing_Period__c = 'Monthly';
            assets3.Start_Date__c = system.today();
            assets3.End_Date__c = System.today();//.addDays(5);
            assets3.Product2Id = newProduct3.id;
            assets3.Haircut_Asset__c = false;
            assets3.Inflight_Quote__c = null;
            assets3.Last_Order_Activity_Date__c = null;
            assets3.List_Price__c = 60;
            assets3.Total_Net__c = 50;
            assets3.Total_List_Price__c = 30;            
            insert assets3;
            Opportunity opp = new Opportunity();
            opp.Name = 'My Opp';
            opp.StageName = 'Pipeline';
            opp.CloseDate = System.today();
            opp.Status__c = 'New';
            opp.NextContactTime__c = System.now();
            opp.NVM_opportunity__c = 'NVM$$$OPP';
            opp.AccountId = theAccount1.id;
        	opp.RecordTypeId = Schema.SObjectType.Opportunity.RecordTypeInfosByName.get('NVM Opportunity').RecordTypeId;
            insert opp;
        Set<Id> setAccountIds = new Set<Id>();
        setAccountIds.add(assets.AccountId);
        
        test.startTest();
        BatchProcessOpportunityDialList sh1 = new BatchProcessOpportunityDialList();  
        sh1.setAccountIds  = setAccountIds;
        database.executebatch(sh1, 25); 
        List<Asset> lstAssets = new List<Asset>(); 
        lstAssets.add(assets);
        sh1.processAssets(lstAssets);
        Test.stopTest();
    }
}